<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home | SUP4RNET</title><link>https://sup4rnet.github.io/</link><atom:link href="https://sup4rnet.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Home</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Tue, 24 Oct 2023 00:00:00 +0000</lastBuildDate><image><url>https://sup4rnet.github.io/media/icon_huae01d6fbd47227582bbdbe187fcb584f_521710_512x512_fill_lanczos_center_3.png</url><title>Home</title><link>https://sup4rnet.github.io/</link></image><item><title>Login nodes</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;p>Currently, the following nodes have been deployed:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Node&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Operating system&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>rest-bfsw01.polito.it&lt;/code>&lt;/td>
&lt;td>P4 switch&lt;/td>
&lt;td>Ubuntu 20.04&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rest-bfsw02.polito.it&lt;/code>&lt;/td>
&lt;td>P4 switch&lt;/td>
&lt;td>Ubuntu 20.04&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>restsrv01.polito.it&lt;/code>&lt;/td>
&lt;td>server&lt;/td>
&lt;td>Debian 12&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="ssh-access">SSH access&lt;/h3>
&lt;p>Accessing the P4 switches is a straightforward &lt;code>ssh&lt;/code> login using the hostnames in the previous table.&lt;/p>
&lt;h4 id="connect-to-vms-through-ssh">Connect to VMs through SSH&lt;/h4>
&lt;p>VMs are not directly visible on the PoliTO network, but are reachable by using &lt;code>restsrv01.polito.it&lt;/code> as a bastion proxy.
You have two options to connect.&lt;/p>
&lt;ol>
&lt;li>Connect via ssh to &lt;code>restsrv01.polito.it&lt;/code>, and from there connect via ssh to your VM:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh &amp;lt;your user&amp;gt;@restsrv01.polito.it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh &amp;lt;your user&amp;gt;@&amp;lt;vm hostname&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Single-step &lt;code>ssh&lt;/code> using &lt;code>restsrv01.polito.it&lt;/code> as a jump proxy:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh -J &amp;lt;your user&amp;gt;@restsrv01.polito.it &amp;lt;your user&amp;gt;@&amp;lt;vm hostname&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For convenience, you may want to add the following lines to your &lt;code>.ssh/config&lt;/code> file. Replace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Host &amp;lt;vm name&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User &amp;lt;your user&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ProxyCommand ssh &amp;lt;you user user&amp;gt;@restsrv01.polito.it -W %h:%p
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can then connect by only typing on your client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh &amp;lt;vm name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Network configuration</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;p>This page describes the network architecture and the addressing scheme currently in use.&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="flex justify-center ">
&lt;div class="w-100" >&lt;img alt="minifyme-s" srcset="
/media/vm-networking_hu8c44437a0794f4333d3aaeb174e6cebf_129995_e7f877208a945e53c9e9232baeb17c06.webp 400w,
/media/vm-networking_hu8c44437a0794f4333d3aaeb174e6cebf_129995_61fc8b7a893d1855f3f7be373d900f41.webp 760w,
/media/vm-networking_hu8c44437a0794f4333d3aaeb174e6cebf_129995_1200x1200_fit_q85_h2_lanczos.webp 1200w"
src="https://sup4rnet.github.io/media/vm-networking_hu8c44437a0794f4333d3aaeb174e6cebf_129995_e7f877208a945e53c9e9232baeb17c06.webp"
width="688"
height="760"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>All compute and network nodes are connected to two subnets:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Dataplane network&lt;/strong>: this is a 100 Gbps networks with QSFP DAC cables. This is dedicated to experiments, traffic generation, etc. within the testbed&lt;/li>
&lt;li>&lt;strong>Management network&lt;/strong>: this is the network used to access the nodes via &lt;code>ssh&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="topology">Topology&lt;/h2>
&lt;p>All servers in the topology are equipped with two NICs at 100 Gbps. One NIC is connected to the P4 switches and one NIC is connected to a fixed-functions Cisco switch. Therefore, servers can communicate with each other without going through the Tofino switches, if a user doesn&amp;rsquo;t want so.&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a class="hb-card group"href="http://restsrv01.polito.it/supernet/uploads/supernet-scheme.pdf" >
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"/>&lt;/svg>Open the network interconnection scheme&lt;/span>&lt;/a>
&lt;/div>
&lt;p>All VMs will be assigned two virtual network interfaces (vNICs) directly attached to the dataplane network (bridged mode). These interfaces are intended for experiments with the Tofino devices from within the VM.&lt;/p>
&lt;p>Internet connectivity to the VMs is provided through a third interface (NAT mode), and must be exclusively used for control operations e.g., install packages.&lt;/p>
&lt;h3 id="ip-addressing">IP addressing&lt;/h3>
&lt;p>The management network has IP subnet &lt;code>192.168.24.64/26&lt;/code>.&lt;br>
The dataplane network has IP subnet &lt;code>10.10.0.0/24&lt;/code> and VLAN identifier &lt;code>100&lt;/code>.&lt;/p>
&lt;p>The IP addresses of the management network have their corresponding DNS records and are not relevant to know.&lt;/p>
&lt;p>The IP addresses in use for the dataplane network are reported below.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">This is a static manual configuration. Likely ported to DHCP in the future.&lt;/span>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>IP address&lt;/th>
&lt;th>Host&lt;/th>
&lt;th>Port&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>10.10.0.2&lt;/code>&lt;/td>
&lt;td>&lt;code>rest-bfsw01.polito.it&lt;/code>&lt;/td>
&lt;td>Tofino internal Ethernet &lt;code>enp4s0f0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.3&lt;/code>&lt;/td>
&lt;td>&lt;code>rest-bfsw01.polito.it&lt;/code>&lt;/td>
&lt;td>Tofino internal Ethernet &lt;code>enp4s0f1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.4&lt;/code>&lt;/td>
&lt;td>&lt;code>rest-bfsw02.polito.it&lt;/code>&lt;/td>
&lt;td>Tofino internal Ethernet &lt;code>enp4s0f0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.5&lt;/code>&lt;/td>
&lt;td>&lt;code>rest-bfsw02.polito.it&lt;/code>&lt;/td>
&lt;td>Tofino internal Ethernet &lt;code>enp4s0f1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.10&lt;/code>&lt;/td>
&lt;td>&lt;code>restsrv01.polito.it&lt;/code>&lt;/td>
&lt;td>Server if@bridge &lt;code>enp5s0@br0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.101&lt;/code>&lt;/td>
&lt;td>&lt;code>restsrv01.polito.it&lt;/code>&lt;/td>
&lt;td>Server if@bridge &lt;code>ens5f1@br1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.11&lt;/code>&lt;/td>
&lt;td>&lt;code>restsrv01-smartdata01&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.12&lt;/code>&lt;/td>
&lt;td>&lt;code>restsrv01-smartdata01&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.13&lt;/code>&lt;/td>
&lt;td>&lt;code>restvm-dauin-01&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.14&lt;/code>&lt;/td>
&lt;td>&lt;code>restvm-dauin-01&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.15&lt;/code>&lt;/td>
&lt;td>&lt;code>restvm-ojasson-01&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.16&lt;/code>&lt;/td>
&lt;td>&lt;code>restvm-ojasson-01&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.17&lt;/code>&lt;/td>
&lt;td>&lt;code>restsrv01-smartdata02&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>10.10.0.18&lt;/code>&lt;/td>
&lt;td>&lt;code>restsrv01-smartdata02&lt;/code>&lt;/td>
&lt;td>VM&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>General guidelines</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;p>This page describes the development environment and tools we configured. It also provides a Tofino primer with some general advices and learned-by-doing facts, in order to speed up the learning curve for new students. This is not a comprehensive tutorial and assumes basic knowledge of the P4 ecosystem.&lt;/p>
&lt;h3 id="join-icrp">Join ICRP!&lt;/h3>
&lt;p>Make sure to join the Intel Connectivity Research Program private community. It&amp;rsquo;s a cool place where you fill find answers to many of your doubts. It is actively used and you will usually receive an answer within 24 hours.&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://community.intel.com/t5/Intel-Connectivity-Research/cmp-p/grouphub:connectivity-research-program" target="_blank" rel="noreferrer">
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227c1.129.166 2.27.293 3.423.379c.35.026.67.21.865.501L12 21l2.755-4.132a1.14 1.14 0 0 1 .865-.502a48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741z"/>&lt;/svg>Intel Connectivity Research Program (Private Forum)&lt;/span>&lt;/a>
&lt;/div>
&lt;h2 id="intel-p4-software-development-environment-sde">Intel P4 Software Development Environment (SDE)&lt;/h2>
&lt;p>We ship on all nodes the Intel P4 SDE, installed under &lt;code>/opt/p4-sde/bf-sde-&amp;lt;x.y.z&amp;gt;&lt;/code>. We have tested and installed version &lt;code>9.13.2&lt;/code>.&lt;/p>
&lt;p>The SDE contains the Tofino P4 compiler, the drivers to interact with the Tofino data plane ASIC, and the Barefoot Runtime (BFRT) libraries to implement the control plane APIs.
It also contains many examples showcasing the Tofino features.&lt;/p>
&lt;p>The following are some useful items under the SDE root directory:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>pkgsrc/p4-examples&lt;/code>: this folder contains examples of P4_16 code and its control plane code. Every example is packaged in its own folder, follow the instructions on the &lt;code>README&lt;/code> in the single folders.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>run_p4_tests.sh&lt;/code>: utility to run one of the previous examples with one click.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>run_switchd.sh&lt;/code>: starts the switch daemon that interacts with the target data plane device.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>run_tofino_model.sh&lt;/code>: starts an instance of the Intel Tofino Model. It is the software emulator to be used as target instead of the physical ASIC. See &lt;a href="../model">Tofino model&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>run_bfshell.sh&lt;/code>: connects a shell to an existing switch daemon. The shell can be used to configure ports, dump the P4 tables, and others. See &lt;a href="http://restsrv01.polito.it/supernet../control-plane/#interactive-bfshell">Interactive bfshell&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>install/share/tofinopd/&lt;/code> this folder contains the build artifacts of your P4 programs, &lt;code>context.json&lt;/code>, &lt;code>bf-rt.json&lt;/code> and the &lt;code>.bin&lt;/code> compiled binary of your &lt;code>.p4&lt;/code> source code. See &lt;a href="http://restsrv01.polito.it/supernet../deploy/#build-and-run">Build and run&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="recommended-devolpment-workflow">Recommended devolpment workflow&lt;/h2>
&lt;h3 id="use-vs-code">Use VS Code&lt;/h3>
&lt;p>To quickly edit and test your code without the need of syncronizing your local changes to the remote cluster machines, we strongly encourage you to familiarize yourself with the &lt;a href="https://code.visualstudio.com/docs/remote/ssh">Remote Development Feature&lt;/a> of the Visual Studio Code.&lt;/p>
&lt;p>It allows editing code as if you were on a local filesystem.&lt;/p>
&lt;p>While configuring your ssh access to the nodes, it is also advised to &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server">install your ssh key(s)&lt;/a> on the remote nodes and &lt;a href="https://code.visualstudio.com/docs/remote/troubleshooting#:~:text=Setting%20up%20the%20SSH%20Agent&amp;amp;text=VS%20Code%20will%20automatically%20add,a%20local%20VS%20Code%20window.">add them to your ssh agent&lt;/a> so that VS code stops prompting the passphrase from you.&lt;/p>
&lt;h3 id="edit-your-pythonpath">Edit your PYTHONPATH&lt;/h3>
&lt;p>The Intel SDE provides several libraries and utilities written in Python to write your control plane scripts and interact with the switch. If you have installed the VS Code Python extension, it is useful while writing the code if VS Code is able to find the Python libraries of the Intel SDE for code linting and autocompletion.&lt;/p>
&lt;p>A quick way is to add them to your &lt;code>PYTHONPATH&lt;/code> variable.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The following instructions will have effect on the &lt;code>PYTHONPATH&lt;/code> only while developing from VS Code in your project folder.&lt;/span>
&lt;/div>
&lt;p>Create a file &lt;code>.env&lt;/code>in your project folders with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PYTHONPATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages:/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages/tofino:/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages/tofino/bfrt_grpc:/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages/p4testutils/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will help the linter and autocomplete. Then, to let the VS Code integrated terminal also find the SDE libraries, add the following content to your &lt;code>.vscode/settings.json&lt;/code> inside the project directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;terminal.integrated.env.linux&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;PYTHONPATH&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages:/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages/tofino:/opt/p4-sde/bf-sde-9.13.2/install/lib/python3.8/site-packages/tofino/bfrt_grpc:${workspaceFolder}/controller&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reload VS Code for the changes to have effect. If you prefer not repeating these steps for all of your projects, you can configure the same options with global user settings.&lt;/p></description></item><item><title>Initial configuration WedgeBF-32X</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;p>This pages shares experience in configuring a Edgecore WedgeBF-32X switch.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">This page does not replace the official
.
Consult the official documentation for preliminary and more detailed information.&lt;/span>
&lt;/div>
&lt;h2 id="configure-the-management-plane">Configure the management plane&lt;/h2>
&lt;p>Before installing the OS, the only way to connect with the switch is via a CLI available on the serial port.&lt;/p>
&lt;p>If you connect with a serial cable (ask your network administrator) you will first access the &lt;em>Board Management Controller CPU (BMC)&lt;/em>. Here you find a minimal Linux-based software (&lt;em>OpenBMC&lt;/em>) to performs a variety of management functions, including&lt;/p>
&lt;ul>
&lt;li>reset orchestration&lt;/li>
&lt;li>power management&lt;/li>
&lt;li>voltage monitoring / fan control, etc.&lt;/li>
&lt;/ul>
&lt;p>If asked for login credentials, use the default administration account &lt;code>root&lt;/code> with password &lt;code>0penBmc&lt;/code> (first character is a zero).&lt;/p>
&lt;h3 id="make-bmc-reachable-over-the-network">Make BMC reachable over the network&lt;/h3>
&lt;p>It&amp;rsquo;s good practice to make the BMC reachable on your local network, by assigning it an IP address and setting network configuration. This way you can connect to the management Ethernet port of the switch and &lt;code>ssh&lt;/code> into the &lt;code>OpenBMC&lt;/code> directly, without the need of the serial cable.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">Remember that the BMC is your last hope when the main CPU will become unreachable, before physical intervention.&lt;/span>
&lt;/div>
&lt;p>Use &lt;code>netplan&lt;/code>, &lt;code>ifconfig&lt;/code> or your favorite method to assign an IP address to the port, or make a static DHCP reservation.&lt;/p>
&lt;p>Working with &lt;code>ssh&lt;/code> is also considerably faster than working with the serial port which has much limited baud rate.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900">
&lt;span class="pr-3 pt-1 text-red-400">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The management network cannot be the 192.168.0.0/24 subnet. This is because there is an internal network between the BMC CPU and the main CPU on that subnet.&lt;/span>
&lt;/div>
&lt;h4 id="example-configuration">Example configuration&lt;/h4>
&lt;p>In the following example, we show the configuration of the &lt;code>eth0&lt;/code> interface on the BMC CPU. This is interface is internally switched (i.e., on the same broadcast domain) to the main CPU. This means that we can connect the 10G Ethernet Management port of the switch, we can reach both the main CPU and the BMC CPU at their respective IP addresses.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@REST-BFSW01-BMC:~# ifconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eth0 Link encap:Ethernet HWaddr 90:2D:77:3F:B5:92
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet addr:192.168.24.71 Bcast:0.0.0.0 Mask:255.255.255.192
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 addr: fe80::922d:77ff:fe3f:b592/64 Scope:Link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX packets:14849323 errors:0 dropped:0 overruns:0 frame:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX packets:747863 errors:0 dropped:0 overruns:0 carrier:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> collisions:0 txqueuelen:1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX bytes:0 &lt;span class="o">(&lt;/span>0.0 B&lt;span class="o">)&lt;/span> TX bytes:0 &lt;span class="o">(&lt;/span>0.0 B&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Interrupt:3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lo Link encap:Local Loopback
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet addr:127.0.0.1 Mask:255.0.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 addr: ::1/128 Scope:Host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UP LOOPBACK RUNNING MTU:16436 Metric:1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX packets:32724294 errors:0 dropped:0 overruns:0 frame:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX packets:32724294 errors:0 dropped:0 overruns:0 carrier:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> collisions:0 txqueuelen:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX bytes:2714402916 &lt;span class="o">(&lt;/span>2.5 GiB&lt;span class="o">)&lt;/span> TX bytes:2714402916 &lt;span class="o">(&lt;/span>2.5 GiB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">usb0 Link encap:Ethernet HWaddr 02:00:00:00:00:01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 addr: fe80::ff:fe00:1/64 Scope:Link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 addr: fe80::1/64 Scope:Link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX packets:221160 errors:0 dropped:0 overruns:0 frame:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX packets:325536 errors:0 dropped:0 overruns:0 carrier:0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> collisions:0 txqueuelen:64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX bytes:71559710 &lt;span class="o">(&lt;/span>68.2 MiB&lt;span class="o">)&lt;/span> TX bytes:28135296 &lt;span class="o">(&lt;/span>26.8 MiB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, we would be able to login into the BMC as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh root@192.168.24.71
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-operating-system">Install operating system&lt;/h2>
&lt;p>The Wedge switch can be treated as a general-purpose server from the perspective of the control-plane operating system, and you can install any Linux distribution on it. Please double check compatibility with Intel SDE first.&lt;/p>
&lt;p>Currently, both switches &lt;code>rest-bfsw01&lt;/code> and &lt;code>rest-bfsw02&lt;/code> have Ubuntu 20.04 LTS installed on it.&lt;/p>
&lt;p>Please refer to this guide to (re)install Ubuntu.&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a class="hb-card group"href="http://restsrv01.polito.it/supernet/uploads/Install-UEFI-Ubuntu-on-Tofino-Wedge.pdf" >
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"/>&lt;/svg>Ubuntu UEFI Install on Wedge Tofino&lt;/span>&lt;/a>
&lt;/div></description></item><item><title>Intel SDE install</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;p>This pages documents how to install Intel P4 Studio and P4 development tools.&lt;/p>
&lt;p>Intel P4 Studio can be installed on any machine running a &lt;a href="https://www.intel.com/content/www/us/en/secure/content-details/648539/intel-p4-studio-software-development-environment-sde-installation-guide.html?wapkw=SDE%20install%20guide">supported OS&lt;/a>. In a common situation, you want to install it on the switch OS to have the ability to communicate with the Tofino ASIC via platform-specific drivers, and push your programs to the dataplane.&lt;/p>
&lt;p>In our cluster, we installed Intel P4 Studio on the control-plane OS running on the WedgeBF-32X switches and in the users VMs.&lt;/p>
&lt;h3 id="preliminary-steps">Preliminary steps&lt;/h3>
&lt;ul>
&lt;li>Download the &lt;a href="https://www.intel.com/content/www/us/en/secure/content-details/821819/sde-9-13-3-intel-p4-studio-sde-9-13-3-release-notes.html?wapkw=p4%20studio">Intel P4 Studio&lt;/a> software from Intel Resource and Documentation Center (RDC).&lt;/li>
&lt;li>Choose a directory and extract the tarball there, e.g., &lt;code>/opt/p4-sde&lt;/code>&lt;/li>
&lt;li>Set the following environmental variables according to your SDE directory:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SDE&lt;/span>&lt;span class="o">=&lt;/span>/opt/p4-sde/bf-sde-9.13.2/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SDE_INSTALL&lt;/span>&lt;span class="o">=&lt;/span>/opt/p4-sde/bf-sde-9.13.2/install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-for-asic">Install for ASIC&lt;/h3>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">This is meaningful only on a physical switch.&lt;/span>
&lt;/div>
&lt;p>When installing on the switches, you must enable the SDE to operational mode ASIC, and you must compile the &lt;em>Board Support Package (BSP)&lt;/em> drivers provided by Edgecore.&lt;/p>
&lt;h4 id="install-dependencies">Install dependencies&lt;/h4>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900">
&lt;span class="pr-3 pt-1 text-red-400">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">To be run only once for a fresh installation on a new OS.&lt;/span>
&lt;/div>
Execute the following script:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo -E $SDE_INSTALL/install-p4studio-dependencies.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="apply-profile">Apply profile&lt;/h4>
&lt;p>P4 Studio offers you &lt;em>interactive&lt;/em> and &lt;em>profile&lt;/em> install modes. If you don&amp;rsquo;t have specific requirements, you can proceed with the profile mode. It consists into applying a pre-defined installation profile, which contains the desired SDE configuration such as dependencies and modules to compile. We use the following profile:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">global-options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">asic&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">features&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bf-diags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bf-platforms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bsp-path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/opt/p4-sde/bf-reference-bsp-9.13.1.tgz&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">drivers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tdi&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">p4-examples&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">p4-16-programs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">p4-14-programs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">switch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">profile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">x1_tofino&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sai&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">architectures&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="l">tofino&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The previous profile is currently located under &lt;code>/opt/p4-sde/bf-sde-9.13.2/install/p4studio/profiles/all-tofino-bsp.yaml&lt;/code> in both &lt;code>rest-bfsw01&lt;/code> and &lt;code>rest-bfsw02&lt;/code>.&lt;/p>
&lt;p>Make sure the &lt;code>bsp-path&lt;/code> points to an existing path. Otherwise, download the &lt;a href="https://www.intel.com/content/www/us/en/secure/content-details/822606/sde-9-13-3-intel-p4-studio-sde-9-13-3-reference-bsp.html?wapkw=p4%20studio">BSP tarball&lt;/a>.&lt;/p>
&lt;p>Then run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd $SDE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">p4studio/p4studio profile apply p4studio/profiles/all-tofino-bsp.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The installation takes about an hour, we recommend running the previous command from a &lt;code>tmux&lt;/code> or &lt;code>screen&lt;/code> terminal.&lt;/span>
&lt;/div>
&lt;h3 id="load-kernel-modules-recommended">Load kernel modules (recommended)&lt;/h3>
&lt;p>When you run &lt;code>bf_switchd&lt;/code> on the switch, &lt;code>ASIC&lt;/code> mode will be automatically selected. With this mode, among other things&lt;code>bf_switchd&lt;/code> tries to set a PCI port between the Tofino ASIC and the CPU. This port is seen as &lt;code>dev_port&lt;/code> 192 from a P4 program on a 2-pipe Tofino.&lt;/p>
&lt;p>To let programmers use the PCI CPU port, we must load a kernel module (one of &lt;code>bf_kdrv&lt;/code> or &lt;code>bf_kpkt&lt;/code>).&lt;/p>
&lt;p>Run the following: &lt;code>sudo $SDE_INSTALL/bin/bf_kdrv_mod_load $SDE_INSTALL&lt;/code>&lt;/p>
&lt;h4 id="difference-between-bf_kdrv-and-bf_kpkt">Difference between &lt;code>bf_kdrv&lt;/code> and &lt;code>bf_kpkt&lt;/code>&lt;/h4>
&lt;p>The difference is that if you use &lt;code>bf_kdrv&lt;/code> driver, it allows you to access PCIe CPU port (send/receive packets using packet DMA) at the user-process level, using the specialized &lt;code>bf_pkt&lt;/code> APIs, whereas if you use &lt;code>bf_kpkt&lt;/code> driver, then the CPU PCIe port is exposed as a regular Linux network interface, and you can send/receive packets using any standard Linux methods: you can simply open a raw socket (e.g., you can use &lt;code>libpcap&lt;/code>, you can use &lt;code>Scapy&lt;/code>, &lt;code>Wireshark&lt;/code>, etc).&lt;/p>
&lt;h3 id="install-for-general-purpose-server">Install for general-purpose server&lt;/h3>
&lt;p>If you not install it for ASIC, the procedure is the same, but you don&amp;rsquo;t have to compile the BSP driver, and you don&amp;rsquo;t have to load the kernel modules. You can pick one of the profiles under &lt;code>$SDE/p4studio/profiles/&lt;/code> and proceed with &lt;code>apply&lt;/code> as above. Alternatively, use the &lt;em>interactive&lt;/em> install mode, where you will be prompted for a list of questions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$SDE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">p4studio/p4studio interactive
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Request account</title><link>https://sup4rnet.github.io/quickstart/getstarted/cluster-access/</link><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/quickstart/getstarted/cluster-access/</guid><description>&lt;h2 id="steps-to-access-the-cluster">Steps to access the cluster&lt;/h2>
&lt;div class="hb-steps">
&lt;h3 id="sign-nda-with-intel">Sign NDA with Intel&lt;/h3>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">You can skip this step if you do not plan to work with P4 switches&lt;/span>
&lt;/div>
&lt;p>Access to Intel documentations and Intel software for Tofino programmable switch family is released under confidentiality and non disclosure agreement (NDA).&lt;/p>
&lt;p>Hence, the very first step in order to work with the switches is to sign a personal NDA with Intel. The procedure is as follows:&lt;/p>
&lt;ul>
&lt;li>The head of your research group must apply for joining the &lt;a href="https://www.intel.com/content/www/us/en/products/docs/network-io/intelligent-fabric-processors/connectivity-education-hub/research-program.html">Intel® Connectivity Research Program&lt;/a>.&lt;/li>
&lt;li>Once the application is accepted, your research group will be assigned a new identifier &lt;code>rgrp_id&lt;/code>.&lt;/li>
&lt;li>From now on, all members of the research group can submit an application for themselves to join the program. Access &lt;a href="https://formfacade.com/public/116697843151790595985/all/form/1FAIpQLScQZrJX1oQOq8xW45e_DL6cSF11RX7aF7tZc7fdp2asVeHvAw?entry.1609118023=231103715X">Intel® Connectivity Research Program User Application&lt;/a> and fill the form using for the Group ID field &lt;code>rgrp_id&lt;/code>.
&lt;img src="intel-app.png" alt="intelapp">&lt;/li>
&lt;li>The head of your research group must then confirm your application.&lt;/li>
&lt;li>Finally, you will receive an email from Intel (~1-5 days) granting access to the &lt;em>Intel Connectivity&lt;/em> web portal and online resources. Follow the instructions in the email you will receive.&lt;/li>
&lt;/ul>
&lt;h3 id="obtain-your-credentials">Obtain your credentials&lt;/h3>
&lt;p>It is at this point that you will be granted access to the testbed and to the internal documentation.&lt;/p>
&lt;p>Credentials for your user will be created at this step. Contact our &lt;a href="mailto:paolo.giaccone@polito.it?subject=#supernet#vpn">account manager&lt;/a> and ask for a new user. You will be provided with your credentials for the following:&lt;/p>
&lt;ul>
&lt;li>&lt;em>System login&lt;/em>: to access cluster&amp;rsquo;s nodes, see &lt;a href="https://sup4rnet.github.io/quickstart/getstarted/login">Login instructions&lt;/a>&lt;/li>
&lt;li>&lt;em>Internal documentation&lt;/em> describing the network topology, the addressing scheme, some basic experiments for connectivity check and a walkthrough primer to move the first steps. See &lt;a href="http://restsrv01.polito.it/supernet/docs">Documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="set-up-vpn">Set up VPN&lt;/h3>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">This is not mandatory for Politecnico di Torino members&lt;/span>
&lt;/div>
&lt;p>The cluster is hosted at Politecnico di Torino (PoliTO) and only reachable from PoliTO campus network. If you are outside of Politecnico di Torino, you will need a VPN connection from your site to PoliTO network.&lt;/p>
&lt;p>In order to simplify the management of VPN accounts, the preferred choice is to establish a site-to-site VPN between your respective institution and Politecnico di Torino. This is a one-time installation overhead and will not be repeated when new members of the same research group will join.&lt;/p>
&lt;ul>
&lt;li>You or the IT department of your institution must get in touch with the cluster admins e.g., via &lt;a href="mailto:paolo.giaccone@polito.it?subject=#supernet#vpn&amp;amp;cc=alessandro.cornacchia@polito.it">email&lt;/a>.&lt;/li>
&lt;li>You will be provided with a spreadsheet and receive further instructions to fill it.&lt;/li>
&lt;/ul>
&lt;p>Requests for individual VPN accounts are granted to Politecnico di Torino members and &lt;em>may&lt;/em> be granted to external partners in the presence of special circumstances. This will be decided on a per-request basis.&lt;/p>
&lt;/div>
&lt;h2 id="next">Next:&lt;/h2>
&lt;h3 id="for-support">For support:&lt;/h3>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://sup4rnet.github.io/community" >
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 0 1-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 0 1 1.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 0 0-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 0 1-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H9.75"/>&lt;/svg>Community&lt;/span>&lt;/a>
&lt;/div>
&lt;h3 id="once-ready">Once ready:&lt;/h3>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a class="hb-card group"href="http://restsrv01.polito.it/supernet/docs" >
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 13.5V3.75m0 9.75a1.5 1.5 0 0 1 0 3m0-3a1.5 1.5 0 0 0 0 3m0 3.75V16.5m12-3V3.75m0 9.75a1.5 1.5 0 0 1 0 3m0-3a1.5 1.5 0 0 0 0 3m0 3.75V16.5m-6-9V3.75m0 3.75a1.5 1.5 0 0 1 0 3m0-3a1.5 1.5 0 0 0 0 3m0 9.75V10.5"/>&lt;/svg>Documentation&lt;/span>&lt;/a>
&lt;/div></description></item><item><title>Configure ports</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;h2 id="todo">TODO:&lt;/h2>
&lt;ul>
&lt;li>add front panel picture with port numbering&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>By default, upon initialization bf_switchd instantiates only Tofino’s internal ports (for
example, the PCIe port, PktGen port, and recirculation port). That is, by default, bf_switchd
instantiates only ports that are not associated with a QSFP/MAC device. These are ports 64-
71 on all the pipes 0, 1, 2, and 3 except for ports 64-67 on pipe 0, which are associated
with QSFP-65 on the front-panel. Such internal ports are instantiated in 100G mode.&lt;/p>
&lt;/blockquote>
&lt;p>For detail about port management, please refer to Section 5 of Wedge 100B User Guide documentations (NDA required).&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://www.intel.com/content/www/us/en/secure/confidential/collections/connectivity-research-program/tofino-series/tofino.html?q=632354-019&amp;amp;s=Relevancy" target="_blank" rel="noreferrer">
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227c1.129.166 2.27.293 3.423.379c.35.026.67.21.865.501L12 21l2.755-4.132a1.14 1.14 0 0 1 .865-.502a48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741z"/>&lt;/svg>Wedge 100B User Guide&lt;/span>&lt;/a>
&lt;/div>
&lt;h2 id="configuring-ports-with-bfshell">Configuring Ports with Bfshell&lt;/h2>
&lt;p>To configure ports, the port manager should be activated by:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfshell&amp;gt; ucli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde&amp;gt; pm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="showing-port-info">Showing Port Info&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">show -a -p &amp;lt;conn_id/chnl&amp;gt; &lt;span class="o">[&lt;/span>-d&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>-t&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where&lt;/p>
&lt;ul>
&lt;li>&lt;code>-p &amp;lt;conn_id/chnl&amp;gt;&lt;/code> is to show the information of a specific port (conn_id) and lane (chnl). Without &lt;code>-p&lt;/code>, information of all available ports is shown.&lt;/li>
&lt;li>&lt;code>-d&lt;/code> to show the detailed output.&lt;/li>
&lt;li>&lt;code>-a&lt;/code> to show all ports including physical ports that have not been configured or enabled.&lt;/li>
&lt;/ul>
&lt;p>For example,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/1 &lt;span class="p">|&lt;/span>23/1&lt;span class="p">|&lt;/span>133&lt;span class="p">|&lt;/span>3/ 5&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/2 &lt;span class="p">|&lt;/span>23/2&lt;span class="p">|&lt;/span>134&lt;span class="p">|&lt;/span>3/ 6&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/3 &lt;span class="p">|&lt;/span>23/3&lt;span class="p">|&lt;/span>135&lt;span class="p">|&lt;/span>3/ 7&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where&lt;/p>
&lt;ul>
&lt;li>&lt;code>PORT&lt;/code>: &lt;code>conn_id/chnl&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>conn_id/chnl&lt;/code>: QSFP connector number / QSFP lane number of this connection, where the
QSFP connector number is the number shown on the Wedge 100B front panel, and the lane number shows the lane for a channelized connection, or 0 for a non-channelized connection such as a port configured for 100G.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>MAC&lt;/code>: Tofino’s QUAD-MAC/block ID of this connection&lt;/li>
&lt;li>&lt;code>D_P&lt;/code>: Toino’s device port ID of this connection. The ID used in P4 programs, Python scripts, PTF and Diag commands of Tofino.&lt;/li>
&lt;li>&lt;code>P/PT&lt;/code>: Tofino&amp;rsquo;s pipe ID and pipe_local_port_id&lt;/li>
&lt;li>&lt;code>FEC&lt;/code>: forwarding error correction setting, which must be one of &lt;code>NONE&lt;/code>, &lt;code>FC&lt;/code>, or &lt;code>RS&lt;/code>. &lt;code>NONE&lt;/code> disables forwarding error correction, &lt;code>FC&lt;/code> refers to BASE-R FEC (Fire Code FEC) and &lt;code>RS&lt;/code> refers to Reed-Solomon FEC (RS-FEC).&lt;/li>
&lt;li>&lt;code>AN&lt;/code>: Autonegotiation&lt;/li>
&lt;li>&lt;code>ADM&lt;/code>: &lt;code>ENB&lt;/code> for enabled port and &lt;code>DIS&lt;/code> for disabled port&lt;/li>
&lt;li>&lt;code>OPR&lt;/code>: &lt;code>DWN&lt;/code> for down port and &lt;code>UP&lt;/code> for up port&lt;/li>
&lt;li>&lt;code>FRAMES RX&lt;/code> and &lt;code>FRAMES TX&lt;/code>: port counters&lt;/li>
&lt;li>&lt;code>E&lt;/code>: whether there is error frames&lt;/li>
&lt;li>For the rest columns, please refer to Wedge 100B User Guide.&lt;/li>
&lt;/ul>
&lt;h3 id="adding-a-port">Adding a Port&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">port-add &amp;lt;conn_id/chnl&amp;gt; &amp;lt;speed&amp;gt; &amp;lt;fec&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where&lt;/p>
&lt;ul>
&lt;li>&lt;code>conn_id/chnl&lt;/code>: QSFP connector number / QSFP lane number of this connection&lt;/li>
&lt;li>&lt;code>speed&lt;/code>: port nominal speed, which must be one of &lt;code>1G&lt;/code>, &lt;code>10G&lt;/code>, &lt;code>25G&lt;/code>, &lt;code>40G&lt;/code>, &lt;code>50G&lt;/code>, or &lt;code>100G&lt;/code>. Please see &lt;em>Section 5.5.1 QSFP lane restrictions on port creation&lt;/em> of Wedge 100B User Guide for detailed speed restrictions&lt;/li>
&lt;li>&lt;code>fec&lt;/code>: forwarding error correction setting, which must be one of &lt;code>NONE&lt;/code>, &lt;code>FC&lt;/code>, or &lt;code>RS&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>For example, adding a 10G port on QSFP connector 1, lane 0 can be done by:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; port-add 1/- 10G NONE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/1 &lt;span class="p">|&lt;/span>23/1&lt;span class="p">|&lt;/span>133&lt;span class="p">|&lt;/span>3/ 5&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/2 &lt;span class="p">|&lt;/span>23/2&lt;span class="p">|&lt;/span>134&lt;span class="p">|&lt;/span>3/ 6&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/3 &lt;span class="p">|&lt;/span>23/3&lt;span class="p">|&lt;/span>135&lt;span class="p">|&lt;/span>3/ 7&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>1/-&lt;/code> is a wildcard operation, which adds all lanes of QSFP connector 1 as 10G ports.&lt;/p>
&lt;h3 id="enabling-a-port">Enabling a Port&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">port-enb &amp;lt;port_str&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>&amp;lt;port_str&amp;gt;&lt;/code> is as same as &lt;code>&amp;lt;conn_id/chnl&amp;gt;&lt;/code>.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; port-enb 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>ENB&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="disabling-a-port">Disabling a Port&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">port-dis &amp;lt;port_str&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For example,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>ENB&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; port-dis 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deleting-a-port">Deleting a Port&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">port-del &amp;lt;port_str&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/0 &lt;span class="p">|&lt;/span>23/0&lt;span class="p">|&lt;/span>132&lt;span class="p">|&lt;/span>3/ 4&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; port-del 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 1/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/1 &lt;span class="p">|&lt;/span>23/1&lt;span class="p">|&lt;/span>133&lt;span class="p">|&lt;/span>3/ 5&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/2 &lt;span class="p">|&lt;/span>23/2&lt;span class="p">|&lt;/span>134&lt;span class="p">|&lt;/span>3/ 6&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1/3 &lt;span class="p">|&lt;/span>23/3&lt;span class="p">|&lt;/span>135&lt;span class="p">|&lt;/span>3/ 7&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Deploy P4 code</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;h3 id="setup">Setup&lt;/h3>
&lt;p>There are at least two systems you should be aware of:&lt;/p>
&lt;ol>
&lt;li>the target board with the Tofino data plane ASIC&lt;/li>
&lt;li>a local control plane CPU connected to the ASIC via PCIe.&lt;/li>
&lt;/ol>
&lt;p>These two are physically packaged in the same pizza box chassis by the manufacturer (e.g., our Wedge100BF-32X Edgecore switches).&lt;/p>
&lt;p>You must choose a &lt;em>build&lt;/em> host that runs Linux and has the P4 Studio SDE installed on it. The build host is used to compile/interpret the control-plane applications and compile one or more P4 program(s). The control plane applications require the Barefoot Runtime libraries from the P4 SDE to interact with the P4 program.
The data plane is handled by the compiled P4 programs once they are installed on the target ASIC.&lt;/p>
&lt;p>Building the P4 code and pushing it to the Tofino ASIC are two separate steps. After the built is complete, you must push the configuration to the Tofino ASIC. It is at this point that the switch will behave according to your logic.&lt;/p>
&lt;p>The build host may be the local control plane CPU itself (easiest and described below), or an additional separate Linux machine (advanced).&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">Using a separate machine as build host requires a little extra effort to push the pipeline configuration on the target ASIC via Barefoot Runtime gRPC APIs.&lt;/span>
&lt;/div>
&lt;h3 id="build-and-run">Build and run&lt;/h3>
&lt;p>This section assumes you chose the CPU aboard the switch as build host.&lt;/p>
&lt;p>Login into the switch CPU, and enter your project directory.
Assuming you have a program named &lt;code>program.p4&lt;/code> in your current directory, the fastest method to compile it is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo p4-build program.p4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a simple wrapper we wrote and invokes a more involved CMake command. It will generate build artifacts as explained in &lt;a href="https://www.intel.com/content/www/us/en/secure/content-details/648539/.intel-p4-studio-software-development-environment-sde-installation-guide.html?wapkw=648539-002">“P4 Studio SDE Install Guide - Appendix C&amp;quot;&lt;/a>. You can use the CMake command directly if you wish.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">For this command sudo is allowed&lt;/span>
&lt;/div>
&lt;p>At this point you are ready to push the data plane to the Tofino target. To do so, just manually start the Intel switch daemon specifying the P4 program to push.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo &lt;span class="nv">$SDE&lt;/span>/run_switchd.sh -p program
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>NOTE&lt;/strong>: you must not add the &lt;code>.p4&lt;/code> extension here. The SDE automatically will retrieve from the build directory the compiled P4 binary with &lt;code>.bin&lt;/code> extension, a &lt;code>bf-rt.json&lt;/code> describing the tables reachable from the control plane, etc. and configure the pipeline(s).
If you prefer, we created a quick alias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo p4 -p program
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">&lt;code>run_switchd&lt;/code> or &lt;code>p4&lt;/code> run several commands with &lt;code>sudo&lt;/code>, so it is recommended to run them with &lt;code>sudo&lt;/code> in case any failure.&lt;/span>
&lt;/div>
&lt;p>It will detect the Tofino ASIC, configure the pipeline with your program, and start an interactive Barefoot shell &lt;code>bfshell&lt;/code> instance.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&amp;gt; sudo p4 -p program
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using SDE /opt/p4-sde/bf-sde-9.13.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using SDE_INSTALL /opt/p4-sde/bf-sde-9.13.2/install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Setting up DMA Memory Pool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using TARGET_CONFIG_FILE /opt/p4-sde/bf-sde-9.13.2/install/share/p4/targets/tofino/simple_recirc.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using SDE_DEPENDENCIES /opt/p4-sde/bf-sde-9.13.2/install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using PATH /opt/p4-sde/bf-sde-9.13.2/install/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin:/opt/p4-sde/bf-sde-9.13.2/install/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using LD_LIBRARY_PATH /opt/p4-sde/bf-sde-9.13.2/install/lib:/opt/p4-sde/bf-sde-9.13.2/install/lib::/usr/local/lib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433062 BF_SWITCHD DEBUG - bf_switchd: system services initialized
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433145 BF_SWITCHD DEBUG - bf_switchd: loading conf_file /opt/p4-sde/bf-sde-9.13.2/install/share/p4/targets/tofino/program.conf...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433222 BF_SWITCHD DEBUG - bf_switchd: processing device configuration...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433355 BF_SWITCHD DEBUG - Configuration &lt;span class="k">for&lt;/span> dev_id &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433410 BF_SWITCHD DEBUG - Family : tofino
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433453 BF_SWITCHD DEBUG - pci_sysfs_str : /sys/devices/pci0000:00/0000:00:03.0/0000:05:00.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.433497 BF_SWITCHD DEBUG - pci_int_mode : &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bfruntime gRPC server started on 0.0.0.0:50052
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ********************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * WARNING: Authorised Access Only *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ********************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bfshell&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Adding a new tenant</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;p>The cluster is managed via &lt;a href="https://docs.ansible.com/ansible/latest/getting_started/index.html">Ansible&lt;/a> to facilitate replicating the same set of configurations on multiple machines at once.&lt;/p>
&lt;p>This page describes the set of playbooks required to run the kick-off actions for a new tenant, including adding new personal VMs connected to the &lt;a href="http://restsrv01.polito.it/supernet/docs/supernet/architecture/#topology">cluster network&lt;/a>, creating users on the systems and setting their privileges.&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">In the following, we assume a basic familiarity with Ansible. You can use your laptop/workstation for all the tasks that follow.&lt;/span>
&lt;/div>
&lt;ul>
&lt;li>Ansible client installed on your machine (tested with Ansible v2.13.7 on WSL Ubuntu 20.04 and Ansible v2.17.3 on macOS Sonoma 14.6.1).&lt;/li>
&lt;li>SSH login to the Ansible targets (see below) with a user with sudo permissions enabled.&lt;/li>
&lt;/ul>
&lt;h2 id="preliminaries">Preliminaries&lt;/h2>
&lt;p>Clone the following repository on the machine where you have the Ansible client installed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git clone https://github.com/sup4rnet/cluster-setup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ansible-playbooks">Ansible playbooks&lt;/h4>
&lt;p>The repository contains the following set of Ansible playbooks:&lt;/p>
&lt;ul>
&lt;li>&lt;code>debian-kvm-p4dev-vm.yaml&lt;/code>: creates a new KVM virtual machine with P4 SDE&lt;/li>
&lt;/ul>
&lt;!-- * `adduser-interactive.yaml`: adds a single user to the target (interactive prompt). -->
&lt;ul>
&lt;li>
&lt;p>&lt;code>p4dev-bootstrap-tofino.yaml&lt;/code>: loads kernel modules to work with Tofino ASIC. Adds users, configures CPU to Tofino &lt;a href="../README.md#vm-installation-with-ansible-playbooks">ethernet interfaces&lt;/a> and add some SDE utilities in the Tofino switches. Enables sudo for selected commands and prepares &lt;code>sshd&lt;/code> groups for dynamic tenant access management.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>p4dev-bootstrap-vms.yaml&lt;/code>: configures network interfaces and add some SDE utilities in the tenant&amp;rsquo;s VMs&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="set-up-the-inventory">Set up the inventory&lt;/h4>
&lt;p>Ansible will apply the very same configuration to all the &amp;ldquo;targets&amp;rdquo; listed in an inventory file. The inventory file is a &lt;code>yaml&lt;/code> configuration that describes the parameters to connect to the machines managed with Ansible. You can add/remove Ansible targets using an inventory file. The repository contains an &lt;code>inventory.yaml&lt;/code> for your reference. It contains:&lt;/p>
&lt;ul>
&lt;li>Physical servers e.g., &lt;code>restsrv01&lt;/code>&lt;/li>
&lt;li>P4 switch control-plane CPUs&lt;/li>
&lt;li>Virtual machines&lt;/li>
&lt;/ul>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900">
&lt;span class="pr-3 pt-1 text-red-400">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">Do not use the &lt;code>inventory.yaml&lt;/code> directly. Create a copy of it, and replace all occurrences of &lt;code>alessandro&lt;/code> with your username, then use your copy.&lt;/span>
&lt;/div>
&lt;p>See &lt;em>Host&lt;/em> column in the &lt;a href="http://restsrv01.polito.it/supernet/docs/supernet/architecture/#ip-addressing">Network configuration&lt;/a> for the updated list of potential targets.&lt;/p>
&lt;h2 id="add-a-new-tenant">Add a new tenant&lt;/h2>
&lt;div class="hb-steps">
&lt;h3 id="choose-new-users">Choose new users&lt;/h3>
&lt;p>Each tenant can have one or more VMs and one or more Linux user(s) on both the switches control-plane OS and the VM&amp;rsquo;s OS.&lt;/p>
&lt;p>Append the new usernames you want to create for the tenant in the list variable &lt;code>restart_users&lt;/code> in &lt;code>group_vars/all.yaml&lt;/code>. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">p4_restart_group&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">p4-restart&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># group name for p4-restart users&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">restart_install_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/home/{{ ansible_user }}/.restart-super&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ssh_auth_config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ restart_install_dir }}/ssh_authorized_user&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">restart_users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># add here&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">p4-restart&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">zhihaow&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">pgiaccone&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, the actions to setup the Tofino control plane OS and the tenant VMs are presented.&lt;/p>
&lt;h3 id="setup-vm">Setup VM&lt;/h3>
&lt;ul>
&lt;li>Append the VM name to the &lt;code>vms&lt;/code> list variable in &lt;code>host_vars/restsrv01.yaml&lt;/code>. For example:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">vms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">restsrv01-smartdata01&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">restvm-dauin-01&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Add the VM you just created as a new Ansible target (&lt;code>inventory.yaml&lt;/code>). The VM name here should match the VM name you previously set in &lt;code>host_vars/restsrv01.yaml&lt;/code>. For example, the inventory file will contain:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># VM targets&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">vms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restsrv01-smartdata01&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">restsrv01-smartdata01&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">p4-restart&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restvm-dauin-01&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">restvm-dauin-01&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">p4-restart&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Create a new file &lt;code>&amp;lt;VM hostname&amp;gt;.yaml&lt;/code> under &lt;code>host_vars&lt;/code> folder, and set the following variables:
&lt;ul>
&lt;li>&lt;code>host_users&lt;/code>: this &lt;em>must&lt;/em> be a &lt;strong>list&lt;/strong> with the VM users (even if single user).&lt;/li>
&lt;li>&lt;code>dataplane_ipv4&lt;/code>: pick a static available &lt;a href="http://restsrv01.polito.it/supernet/docs/supernet/architecture/#ip-addressing">dataplane IP address&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="run-playbooks">Run playbooks&lt;/h3>
&lt;p>From your Ansible client run the playbook &lt;code>adduser.yaml&lt;/code>. Replace &lt;code>&amp;lt;your inventory file&amp;gt;&lt;/code> with a valid path.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ansible-playbook playbooks/adduser.yaml -i &amp;lt;your inventory file&amp;gt; -K
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will:&lt;/p>
&lt;ul>
&lt;li>create a new &lt;code>libvirt&lt;/code> VM, cloning a base VM with P4 development environment installed.&lt;/li>
&lt;li>add the users to the&lt;/li>
&lt;li>set Tofino and user permissions. Root privileges are allowed for the minimal set of commands (e.g., compiling and running a P4 application) which require interaction with DMA.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h4 id="notes">Notes&lt;/h4>
&lt;p>&lt;em>About -K option&lt;/em>: The &lt;code>-K&lt;/code> option will prompt for the &lt;code>sudo&lt;/code> password and is required only the first time you run this playbook on a newly created VM. After the first run, your Ansible user will be granted sudo without pwd for subsequent Ansible runs.&lt;/p></description></item><item><title>Ping test</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;h2 id="test-connectivity-with-intel-switchp4">Test connectivity with Intel switch.p4&lt;/h2>
&lt;p>The &lt;code>switch.p4&lt;/code> program is the L2/L3 P4 switch provided by Intel. It implements standard switching and routing functionalities you would find in a fixed-function switch, including features such as ACL, load balancing, etc.&lt;/p>
&lt;p>We will use this P4 program for basic connectivity tests.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900">
&lt;span class="pr-3 pt-1 text-red-400">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">For other .p4 programs you are responsible to program the switch forwarding logic yourself. The following tests will not work as-it-is.&lt;/span>
&lt;/div>
&lt;p>Intel provides a dedicated &lt;a href="https://www.intel.com/content/www/us/en/secure/content-details/632451/bf-switch-cli-guide.html?wapkw=switch%20p4%20CLI">&lt;em>switch.p4 CLI&lt;/em>&lt;/a> that implements CRUD (Create, Read, Update, Delete) operations to interact with &lt;code>switch.p4&lt;/code>. For these examples, we adopt the &lt;em>switch.p4 CLI&lt;/em> to configure the switch program.&lt;/p>
&lt;p>All the hosts involved in these experiments are on the same LAN, i.e., we will use only L2 features of &lt;code>switch.p4&lt;/code>.
At the very minimum, we must enable switch ports and add them to the default switch VLAN (with &lt;code>vlan_id 1&lt;/code>), exactly as we would do in a fixed-function switch.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The following experiments assume the cable layout described in &lt;a href="http://restsrv01.polito.it/supernet/docs/supernet/architecture/#topology">Network configuration&lt;/a>.&lt;/span>
&lt;/div>
&lt;h3 id="server-left_right_arrow-switchp4-left_right_arrow-rest-bfsw01-cpu">server &amp;#x2194;&amp;#xfe0f; switch.p4 &amp;#x2194;&amp;#xfe0f; rest-bfsw01 cpu&lt;/h3>
&lt;p>In this scenario we test connectivity between a server, e.g., &lt;code>restsrv01&lt;/code>, and a local control plane CPU on board of the P4 switches, e.g., &lt;code>rest-bfsw01&lt;/code>.
We directly connect the server to the P4 switch with no other hop in between.&lt;/p>
&lt;p>First enable the switch ports.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The switch.p4 API expects a list of &amp;ldquo;lane identifiers&amp;rdquo; when we have to enable a port. Lane number can be obtained from the front panel port number with the following conversion: &lt;code>lane_number&lt;/code> = (&lt;code>front_port&lt;/code> - 1) x 4&lt;/span>
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable port connecting rest-bfsw01 to restsrv01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add port &lt;span class="nb">type&lt;/span> NORMAL lane_list 4,5,6,7 speed &lt;span class="m">100000&lt;/span> fec_type RS port_vlan_id &lt;span class="m">1&lt;/span> admin_state &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable port connected to internal Ethernet CPU&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add port &lt;span class="nb">type&lt;/span> NORMAL lane_list &lt;span class="m">130&lt;/span> speed &lt;span class="m">10000&lt;/span> fec_type NONE autoneg DEFAULT port_vlan_id &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the commands are successful, you should get a &lt;code>member_handle&lt;/code> number in the output log.
Next, we use the &lt;code>member_handle&lt;/code> to add both ports to VLAN 1 (default vlan)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># member handle numbers are given after add port command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add vlan_member member_handle port &lt;span class="m">4&lt;/span> vlan_handle vlan &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add vlan_member member_handle port &lt;span class="m">5&lt;/span> vlan_handle vlan &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, set IP addresses and routes on both the server and the switch control plane CPU.&lt;/p>
&lt;p>On &lt;code>rest-bfsw01&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo ip a add 10.10.0.20/24 dev enp4s0f0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On &lt;code>restsrv01&lt;/code> we also need to ensure traffic through the NIC connected to &lt;code>rest-bfsw01&lt;/code>. A simple way is to add a &lt;code>/32&lt;/code> routing rule.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo ip a add 10.10.0.21/24 dev ens5f1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ip route add 10.10.0.20/32 dev ens5f1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;#x2705; You can now &lt;code>ping&lt;/code> the two hosts.&lt;/p>
&lt;h3 id="server-left_right_arrow-cisco-100g-left_right_arrow-switchp4-left_right_arrow-rest-bfsw01-cpu">server &amp;#x2194;&amp;#xfe0f; Cisco 100G &amp;#x2194;&amp;#xfe0f; switch.p4 &amp;#x2194;&amp;#xfe0f; rest-bfsw01 cpu&lt;/h3>
&lt;p>In this scenario, we check for connectivity when passing through the Cisco 100G switch.&lt;/p>
&lt;p>Make sure to remove the route added before:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo ip route del 10.10.0.20/32 dev ens5f1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>ip route&lt;/code> to double check that the route to the data plane network is via the interface &lt;code>ens5f0&lt;/code>.&lt;/p>
&lt;p>Then enable the port connected to Cisco 100G:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># enable port 29/0 of rest-bfsw01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add port &lt;span class="nb">type&lt;/span> NORMAL lane_list 112,113,114,115 speed &lt;span class="m">100000&lt;/span> fec_type RS port_vlan_id &lt;span class="m">1&lt;/span> admin_state &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add vlan_member member_handle port &lt;span class="m">4&lt;/span> vlan_handle vlan &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add vlan_member member_handle port &lt;span class="m">5&lt;/span> vlan_handle vlan &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ping test should work !&lt;/p>
&lt;h3 id="debug-issues">Debug issues&lt;/h3>
&lt;p>Check port counters with &lt;code>bfshell&amp;gt; ucli.pm show&lt;/code>.
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://sup4rnet.github.io/docs/tofino-primer/debugging" >
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6.75 7.5l3 2.25l-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0 0 21 18V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v12a2.25 2.25 0 0 0 2.25 2.25"/>&lt;/svg>Quick steps to debug&lt;/span>&lt;/a>
&lt;/div>
&lt;/p></description></item><item><title>Quick debugging</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;p>This page provides several examples for quick debugging or troubleshooting your P4 program. The troubleshooting is done using &lt;code>bf-sde&lt;/code>, which can be activated from &lt;code>bfsehll&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfshell&amp;gt; ucli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde&amp;gt; ?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dump-trace Display the trace logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reset-trace Clear the trace logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> set-trace-level Set the trace level &lt;span class="k">for&lt;/span> a module
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> set-log-level Set the log level &lt;span class="k">for&lt;/span> a module
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get_trace get_trace &amp;lt;size&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ver Display versions of all loaded/linked BF SDE components
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> show_tech_drivers Display verbose system and module parameters. Usage -d &amp;lt;dev_id&amp;gt; -m &amp;lt;module_name&amp;gt; &lt;span class="o">[&lt;/span>-f &amp;lt;to &lt;span class="nb">enable&lt;/span> file logging&amp;gt;&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dvm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lld
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> devdiag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pipe_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> traffic_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pkt_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> perf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> switchd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more detailed testing and troubleshooting guidelines, please refer to Section 9 of Wedge 100B User Guide documentations (NDA required).&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://www.intel.com/content/www/us/en/secure/confidential/collections/connectivity-research-program/tofino-series/tofino.html?q=632354-019&amp;amp;s=Relevancy" target="_blank" rel="noreferrer">
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227c1.129.166 2.27.293 3.423.379c.35.026.67.21.865.501L12 21l2.755-4.132a1.14 1.14 0 0 1 .865-.502a48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741z"/>&lt;/svg>Wedge 100B User Guide&lt;/span>&lt;/a>
&lt;/div>
&lt;h2 id="dumping-match-action-tables">Dumping Match-action Tables&lt;/h2>
&lt;p>You can dump the match and action information of your P4 program using &lt;code>pipe_mgr&lt;/code>.&lt;/p>
&lt;h3 id="list-all-match-action-tables">List All Match-action Tables&lt;/h3>
&lt;blockquote>
&lt;p>To list all the tables in use by the P4 program, use the &lt;code>pipe_mgr&lt;/code> table dump command, &lt;code>tbl -d &amp;lt;dev&amp;gt;&lt;/code>(where &lt;code>&amp;lt;dev&amp;gt;&lt;/code> is the switch device ID, usually &amp;ldquo;0&amp;rdquo; on a single-ASIC system):&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr&amp;gt; tbl -d &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Match-Action Tables:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----------------------------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>--------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>----&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>----&lt;span class="p">|&lt;/span>----&lt;span class="p">|&lt;/span>-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Name &lt;span class="p">|&lt;/span>Handle &lt;span class="p">|&lt;/span>Type &lt;span class="p">|&lt;/span>Entries &lt;span class="p">|&lt;/span>Keysz&lt;span class="p">|&lt;/span>Stgs&lt;span class="p">|&lt;/span>Adt&lt;span class="p">|&lt;/span>Sel&lt;span class="p">|&lt;/span>Sta&lt;span class="p">|&lt;/span>Met&lt;span class="p">|&lt;/span>Sful&lt;span class="p">|&lt;/span>Prof&lt;span class="p">|&lt;/span>Owner
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----------------------------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>--------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>----&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>----&lt;span class="p">|&lt;/span>----&lt;span class="p">|&lt;/span>-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IngressParser.&lt;span class="nv">$PORT_METADATA&lt;/span>&lt;span class="p">|&lt;/span>0x1000001 &lt;span class="p">|&lt;/span>exm &lt;span class="p">|&lt;/span>&lt;span class="m">288&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>P0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ingress.ipv4_host &lt;span class="p">|&lt;/span>0x1000002 &lt;span class="p">|&lt;/span>exm &lt;span class="p">|&lt;/span>&lt;span class="m">65536&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>Exm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ingress.ipv4_net &lt;span class="p">|&lt;/span>0x1000003 &lt;span class="p">|&lt;/span>term &lt;span class="p">|&lt;/span>&lt;span class="m">65536&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">6&lt;/span> &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>Tcam
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ingress.ipv4_lpm &lt;span class="p">|&lt;/span>0x1000004 &lt;span class="p">|&lt;/span>term &lt;span class="p">|&lt;/span>&lt;span class="m">12288&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>NA &lt;span class="p">|&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>Tcam
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Action-Data Tables:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Selection Tables:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Statistics Tables:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Meter Tables:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Stateful Tables:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>Handle&lt;/code> column is the unique identifier of the table. In &lt;code>Type&lt;/code> column, &lt;code>exm&lt;/code> is for exact-match table, and &lt;code>term&lt;/code> is for the ternary-match table and lpm-match table.&lt;/p>
&lt;h3 id="dumping-exact-match-table">Dumping Exact-match Table&lt;/h3>
&lt;p>Once getting the table handle from &lt;code>Handle&lt;/code> column, you can dump the information of an exact-match table by:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr&amp;gt; exm_tbl_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr.exm_tbl_mgr&amp;gt; tbl_info -d &lt;span class="m">0&lt;/span> -h 0x1000002
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Exact match table info &lt;span class="k">for&lt;/span> table Ingress.ipv4_host &lt;span class="o">(&lt;/span>0x1000002&lt;span class="o">)&lt;/span> device &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Size : 65536, Number occupied : &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Symmetric : &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Num of scopes : &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Scopes pipe Bitmap:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Scope&lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span> : 0xf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Number of references to action data tables : &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Number of references to selection tables : &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Pipe id : All pipes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Number of stages : &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Stages : 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Stage &lt;span class="m">0&lt;/span> info :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Num entries : 71680, Num Occupied : &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Packing format :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of entries per wide-word : &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of rams in wide-word : &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of hash-ways : &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Hashway &lt;span class="m">0&lt;/span> info :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Ram allocation info :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of wide-word blocks : &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Mem ids :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>74, 86, &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Entry VPN info :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sub-entry 0, &lt;span class="nv">VPN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sub-entry 6, &lt;span class="nv">VPN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">69&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entries :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Default entry hdl &lt;span class="k">for&lt;/span> ALL PIPES : &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry Hdl &lt;span class="p">|&lt;/span>Pipe &lt;span class="p">|&lt;/span>Stage&lt;span class="p">|&lt;/span>Way &lt;span class="p">|&lt;/span>Mem-id&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>Line-no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>----------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x2 &lt;span class="p">|&lt;/span>ALL PIPES &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>75,87, &lt;span class="p">|&lt;/span> &lt;span class="m">230&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x3 &lt;span class="p">|&lt;/span>ALL PIPES &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>75,87, &lt;span class="p">|&lt;/span> &lt;span class="m">229&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x4 &lt;span class="p">|&lt;/span>ALL PIPES &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>75,87, &lt;span class="p">|&lt;/span> &lt;span class="m">228&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x5 &lt;span class="p">|&lt;/span>ALL PIPES &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span>75,87, &lt;span class="p">|&lt;/span> &lt;span class="m">25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Instance FFFF Stage &lt;span class="m">0&lt;/span> Way 0: &lt;span class="m">4&lt;/span> / &lt;span class="m">14336&lt;/span> Entries, 0.03%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Instance FFFF Stage &lt;span class="m">0&lt;/span> Way 1: &lt;span class="m">0&lt;/span> / &lt;span class="m">14336&lt;/span> Entries, 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Instance FFFF Stage &lt;span class="m">0&lt;/span> Way 2: &lt;span class="m">0&lt;/span> / &lt;span class="m">14336&lt;/span> Entries, 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Instance FFFF Stage &lt;span class="m">0&lt;/span> Way 3: &lt;span class="m">0&lt;/span> / &lt;span class="m">14336&lt;/span> Entries, 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Instance FFFF Stage &lt;span class="m">0&lt;/span> Way 4: &lt;span class="m">0&lt;/span> / &lt;span class="m">14336&lt;/span> Entries, 0.00%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>exm_tbl_mgr&lt;/code> is required for dumping an exact-match table. Option &lt;code>-d &amp;lt;dev&amp;gt;&lt;/code> is switch device ID. Option &lt;code>-h &amp;lt;tbl_hdl&amp;gt;&lt;/code> is the table handle.&lt;/p>
&lt;p>In the dump of a table, the &lt;code>Entry Hdl&lt;/code> column provides each entry’s handle, which you can use to look up information about that table entry.&lt;/p>
&lt;h3 id="dumping-ternary-match-table">Dumping Ternary-match Table&lt;/h3>
&lt;p>Different from exact-match table, &lt;code>tcam_tbl&lt;/code> context should be used for ternary-match table. The usage of &lt;code>tbl_info&lt;/code> is as the same.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr&amp;gt; tcam_tbl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr.tcam_tbl&amp;gt; tbl_info -d &lt;span class="m">0&lt;/span> -h 0x1000004
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----------------------------------------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>----------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Name &lt;span class="p">|&lt;/span>tbl_hdl &lt;span class="p">|&lt;/span>Sym&lt;span class="p">|&lt;/span>Scopes&lt;span class="p">|&lt;/span>Occupied &lt;span class="p">|&lt;/span>ADT&lt;span class="p">|&lt;/span>ADT Hdl &lt;span class="p">|&lt;/span>SEL&lt;span class="p">|&lt;/span>SEL Hdl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----------------------------------------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>----------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ingress.ipv4_lpm &lt;span class="p">|&lt;/span>0x1000004 &lt;span class="p">|&lt;/span>Y &lt;span class="p">|&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span>N &lt;span class="p">|&lt;/span>0x0 &lt;span class="p">|&lt;/span>N &lt;span class="p">|&lt;/span>0x0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total Size: &lt;span class="m">12288&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">P4 Size: &lt;span class="m">12288&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PIPE &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Default Entry Hdl: 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Default Entry Type: Indirect
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Pipes in bitmap : &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Partition &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total Entries &lt;span class="m">12288&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HLP usage &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LLP usage &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entries
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>--------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>------&lt;span class="p">|&lt;/span>--------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>--------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Index &lt;span class="p">|&lt;/span>Entry Hdl &lt;span class="p">|&lt;/span>Stage&lt;span class="p">|&lt;/span>Diradr &lt;span class="p">|&lt;/span>Sub&lt;span class="p">|&lt;/span>Mem-id&lt;span class="p">|&lt;/span>Line-no &lt;span class="p">|&lt;/span>Group&lt;span class="p">|&lt;/span>Priority
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------&lt;span class="p">|&lt;/span>----------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>--------&lt;span class="p">|&lt;/span>---&lt;span class="p">|&lt;/span>------&lt;span class="p">|&lt;/span>--------&lt;span class="p">|&lt;/span>-----&lt;span class="p">|&lt;/span>--------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span>0x2 &lt;span class="p">|&lt;/span> 7&lt;span class="p">|&lt;/span>0x2fff &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 23&lt;span class="p">|&lt;/span> 511&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span>0x3 &lt;span class="p">|&lt;/span> 7&lt;span class="p">|&lt;/span>0x2ffa &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 23&lt;span class="p">|&lt;/span> 506&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span>0x4 &lt;span class="p">|&lt;/span> 7&lt;span class="p">|&lt;/span>0x2ff5 &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 23&lt;span class="p">|&lt;/span> 501&lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> &lt;span class="m">32&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dumping-table-entry">Dumping Table Entry&lt;/h3>
&lt;p>Once getting the entry handle from &lt;code>Entry Hdl&lt;/code> column, you can dump the entry information by:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">entry_info -d &amp;lt;dev_id&amp;gt; -h &amp;lt;tbl_hdl&amp;gt; -e &amp;lt;entr_hdl&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>&amp;lt;tbl_hdl&amp;gt;&lt;/code> is the table handle that identifies the table. &lt;code>&amp;lt;entr_hdl&amp;gt;&lt;/code> is the entry handle that identifies the entry. Similar as &lt;code>tbl_info&lt;/code>, &lt;code>entry_info&lt;/code> also requires context of &lt;code>exm_tbl_mgr&lt;/code> or &lt;code>tbl_info&lt;/code>.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr&amp;gt; tcam_tbl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr.tcam_tbl&amp;gt; entry_info -d &lt;span class="m">0&lt;/span> -h 0x1000004 -e 0x2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pipe: BF_DEV_PIPE_ALL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Default?: N
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pipe: &lt;span class="m">65535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Partition: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Logical Index: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Stage: &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Stage tblhdl: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Match address: 0x2fff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Mem-id: &lt;span class="m">23&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Line no: &lt;span class="m">511&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subword: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TIND mem-id: &lt;span class="m">14&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TIND line: &lt;span class="m">1535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TIND subword: &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Group: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Priority: &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ACT Fn hdl: 0x20000007
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Action type: Action data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LLP Info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pipe ID: &lt;span class="m">65535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Partition: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Index: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Range count: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subentry: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ADT ent hdl: 0x0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sel grp: 0x0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Log action idx: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Log sel idx: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ADT addr: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SEL addr: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SEL len: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Stats addr: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Meter addr: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Stful addr: 0&lt;span class="o">(&lt;/span>0x0 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TCAM Addr: 0x20e8012c5ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TIND Addr: 0x20e800049ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Match spec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hdr_ipv4_dst_addr :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Value: c0 a8 &lt;span class="m">01&lt;/span> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Mask: ff ff ff &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Word0 &lt;span class="m">0&lt;/span> -- &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> 1f fe 2a &lt;span class="m">02&lt;/span> ad ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Word1 &lt;span class="m">0&lt;/span> -- &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> 1f ff &lt;span class="m">00&lt;/span> a8 &lt;span class="m">01&lt;/span> fe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Action :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Action Spec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Action &lt;span class="k">function&lt;/span> :Ingress_send &lt;span class="o">(&lt;/span>536870919&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Value: &lt;span class="m">00&lt;/span> &lt;span class="m">01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TIND &lt;span class="m">0&lt;/span> -- &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="troubleshooting-packet-drops">Troubleshooting Packet Drops&lt;/h2>
&lt;blockquote>
&lt;p>To show drop cause and counters about packet drops, including packet drops at different phases (such as ingress pipeline, egress pipeline and traffic manager), use the commands of the pkt_path_counter facility. See &lt;a href="#port-and-pipeline-counters">Port and Pipeline Counters&lt;/a> below. For traffic manager (TM) packet drop counters, use the commands of the bf-sde.traffic_mgr.counter facility. See &lt;a href="#traffic-manager-tm-and-traffic-counters">Traffic Manager Counter Commands&lt;/a> below.&lt;/p>
&lt;/blockquote>
&lt;h2 id="port-and-pipeline-counters">Port and Pipeline Counters&lt;/h2>
&lt;h3 id="dumping-port-counters">Dumping Port Counters&lt;/h3>
&lt;blockquote>
&lt;p>Using the commands shown below, you can print a quick summary of MAC receive and MAC transmit counters for a port. The column ‘E’ indicates whether non-zero error counters are observed.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 65/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PORT &lt;span class="p">|&lt;/span>MAC &lt;span class="p">|&lt;/span>D_P&lt;span class="p">|&lt;/span>P/PT&lt;span class="p">|&lt;/span>SPEED &lt;span class="p">|&lt;/span>FEC &lt;span class="p">|&lt;/span>AN&lt;span class="p">|&lt;/span>KR&lt;span class="p">|&lt;/span>RDY&lt;span class="p">|&lt;/span>ADM&lt;span class="p">|&lt;/span>OPR&lt;span class="p">|&lt;/span>LPBK &lt;span class="p">|&lt;/span>FRAMES RX &lt;span class="p">|&lt;/span>FRAMES TX &lt;span class="p">|&lt;/span>E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----+----+---+----+-------+----+--+--+---+---+---+--------+----------------+----------------+-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">65/0 &lt;span class="p">|&lt;/span>64/0&lt;span class="p">|&lt;/span> 64&lt;span class="p">|&lt;/span>0/64&lt;span class="p">|&lt;/span>10G &lt;span class="p">|&lt;/span>NONE&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>Au&lt;span class="p">|&lt;/span>YES&lt;span class="p">|&lt;/span>DIS&lt;span class="p">|&lt;/span>DWN&lt;span class="p">|&lt;/span> NONE &lt;span class="p">|&lt;/span> 0&lt;span class="p">|&lt;/span> 3&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A detailed view of the MAC counters of a port can be dumped as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">bf-sde.pm&amp;gt; show -p 65/0 -d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 65/0 : Port Identifier
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NO : is port internal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 64/0 : MAC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">64&lt;/span> : Dev Port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0/64 : Pipe/Port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 10G : Speed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NONE : FEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> YES : Ready &lt;span class="k">for&lt;/span> Bring Up
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NO : Autoneg eligibility
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DEFAULT : AN policy &lt;span class="nb">set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DIS : Admin State
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DOWN : Operational Status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FramesReceivedOK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FramesReceivedAll
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FramesReceivedwithFCSError
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FrameswithanyError
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : OctetsReceivedinGoodFrames
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : OctetsReceived
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FramesReceivedwithUnicastAddresses
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FramesReceivedwithMulticastAddresses
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : FramesReceivedwithBroadcastAddresses
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : ReceiveStandardPause1USCount
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> : &lt;span class="nv">FramesTruncated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dumping-pipeline-traffic-counters">Dumping Pipeline Traffic Counters&lt;/h3>
&lt;p>Traffic counters at various points in the pipeline can be dumped using the CLI commands of the &lt;code>pkt_path_counter&lt;/code> facility.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde&amp;gt; pkt_path_counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr.pkt_path_counter&amp;gt; pipe_cnt -p &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">idprsr-counter Count Register Name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_________________________________________________________________________________
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: header too long &lt;span class="m">0&lt;/span> hdr_too_long_i
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Valid PHV into Deparser &lt;span class="m">3&lt;/span> cnt_i_phv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Valid TPHV into Deparser &lt;span class="m">3&lt;/span> cnt_i_tphv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Packets into Deparser &lt;span class="m">3&lt;/span> cnt_i_read
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Packets discarded &lt;span class="m">0&lt;/span> cnt_i_discard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Packets resubmitted &lt;span class="m">0&lt;/span> cnt_i_resubmit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Learn Counter due to packets &lt;span class="m">0&lt;/span> cnt_i_learn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: Packets processed in output phase &lt;span class="m">3&lt;/span> cnt_pkts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IDPRSR: CRC error on packets from Ibuf &lt;span class="m">0&lt;/span> ctm_crc_err&lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EDPRSR: Errored packets from Ebuf to eCTM &lt;span class="m">0&lt;/span> e_ctm_pkt_err
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EDPRSR: Packets sent out of Egress Deparser &lt;span class="m">3&lt;/span> e_fwd_pkts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EDPRSR: Packets discarded &lt;span class="m">0&lt;/span> e_disc_pkts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EDPRSR: Packets sent to Egress mirror buffer &lt;span class="m">0&lt;/span> e_mirr_pkts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Supported options of &lt;code>pipe_cnt&lt;/code> are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-d &amp;lt;devid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p &amp;lt;pipe&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-m &amp;lt;port&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-z &amp;lt;print zero counters too&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Inject one or more packets to the switch, to see if the corresponding counters increases. Then you can figure out in which phase your packets are forwarded or rejected.&lt;/p>
&lt;p>You can also dump/clear counters of ingress/egress parsers, ports in this &lt;code>pkt_path_counter&lt;/code>. Available commands are as below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.pipe_mgr.pkt_path_counter&amp;gt; ?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ibuf ibuf counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> iprsr ingress parser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> idprsr ingress deparser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> eprsr egress parser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> epb_ebuf egress parser buffer counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> edprsr egress deparser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pipe_cnt ingress and egress deparser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s2p s2p counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> p2s p2s counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pmarb pmarb counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> device All device - level counters Usage: -d &amp;lt;devid&amp;gt; -z &amp;lt;print zero counters too&amp;gt; &lt;span class="o">[&lt;/span> -X output in hexadecimal &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pipe All pipe - level counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -z &amp;lt;print zero counters too&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port All port - level counters in a pipe Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; -z &amp;lt;print zero counters too&amp;gt; &lt;span class="o">[&lt;/span> -A output &lt;span class="k">for&lt;/span> all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_pipe Clear ingress and egress deparser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_ibuf Clear ibuf counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span> -A clear all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_iprsr Clear ingress parser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span> -A clear all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_idprsr ingress deparser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_eprsr Clear egress parser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span> -A clear all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_edprsr egress deparser counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_epb_ebuf Clear egress parser buffer counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span> -A clear all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_pmarb Clear Pmarb counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_p2s Clear p2s counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span> -A clear all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_s2p Clear s2p counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span> -A clear all channels in the port &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clear_all_pipe Clear all port counters in data path Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> intr_status Interrupts of parde blocks Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -m &amp;lt;port&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal -A output &lt;span class="k">for&lt;/span> all channels in the port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deparser_intr_status Interrupts of parde blocks Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; &lt;span class="o">[&lt;/span>-X output in hexadecimal &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="traffic-manager-tm-and-traffic-counters">Traffic-Manager (TM) and Traffic Counters&lt;/h2>
&lt;blockquote>
&lt;p>The traffic manager (TM) troubleshooting commands and counters allow you to read TM status, queue and port pass/drop count, XON/XOFF status, and other useful traffic management information. These commands are provided in the &lt;code>traffic_mgr&lt;/code> package.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde&amp;gt; traffic_mgr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.traffic_mgr&amp;gt; counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bf-sde.traffic_mgr.counter&amp;gt; blocklevel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">perpipe-Counter Count/State Register Name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_______________________________________________________________________________________
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Valid SOP &lt;span class="m">841561797754213375&lt;/span> wac_reg.ctr_vld_sop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">No dest drop &lt;span class="m">195941375&lt;/span> wac_reg.ctr_drop_no_dst
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Buffer Full &lt;span class="m">841561797754213375&lt;/span> wac_reg.wac_drop_buf_full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Packets dropped due to buffer full condition &lt;span class="m">841561797754213375&lt;/span> tm_caa.epipe.pkt_dropcnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total Pkts dropped in egress pipe&lt;span class="o">[&lt;/span>PSC&lt;span class="o">]&lt;/span> &lt;span class="m">841561797754213375&lt;/span> tm_psc_top.psc_common.epipe.pkt_dropcnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total Pex to Qlc discard Pkts &lt;span class="m">841561797754213375&lt;/span> tm_qlc_top.qlc.pex_dis_cnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total Discard Pkts &lt;span class="m">841561797754213375&lt;/span> tm_qlc_top.qlc.qac_dis_cnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total UCast Cut Through Packet Count &lt;span class="m">841561797754213375&lt;/span> tm_clc_top.clc.uc_ct_cnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total MCcast Cut Through Packet Count &lt;span class="m">841561797754213375&lt;/span> mc_ct_cnt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Available tools in &lt;code>traffic_mgr&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bf-sde.traffic_mgr.counter&amp;gt; ?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> blocklevel Dump all block counters Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wac_perport Dump per port drop counter as seen in wac Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wac_perppg Dump per ppg drop counter as seen in wac Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> qac_q_drop Dump per queue drop counter as seen in qac Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> qac_port_drop Dump per port drop counter as seen in qac Usage: -d &amp;lt;devid&amp;gt; -p &amp;lt;pipe&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pre_fifo_drop Dump all pre fifo drop counter Usage: -d &amp;lt;devid&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> stop_stats_cache_timer Stop TM Stats Cache Timer Usage: -d &amp;lt;devid&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> start_stats_cache_timer Start TM Stats Cache Timer Usage: -d &amp;lt;devid&amp;gt; -X &lt;span class="o">[&lt;/span>print in hex&lt;span class="o">]&lt;/span> -z &lt;span class="o">[&lt;/span>print zero counters too&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enjoy debugging!&lt;/p></description></item><item><title>Control plane code</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;p>This page describes how to interact with P4 tables and objects using the interactive bfshell. In this tutorial, we&amp;rsquo;ll use a simple P4 program called &lt;code>simple_l3&lt;/code> for example, which contains two tables, &lt;code>ipv4_host&lt;/code> and &lt;code>ipv4_lpm&lt;/code>.&lt;/p>
&lt;h2 id="interactive-bfshell">Interactive bfshell&lt;/h2>
&lt;blockquote>
&lt;p>The driver runs a CLI, called &lt;code>bfshell&lt;/code>. It is actually a &amp;ldquo;gateway&amp;rdquo; to several different interactive shells. A tool with the same name (usually invoked by running the script &lt;code>$SDE/run_bfshell.sh&lt;/code> or &lt;code>bfshell&lt;/code>) allows you to access bfshell via a telnet-like session from another window. The advantage of this approach is that your session will not be obscured by driver messages.&lt;/p>
&lt;/blockquote>
&lt;p>It is automatically activated after executing &lt;code>p4 -p program&lt;/code> with a prompt &lt;code>bfshell&amp;gt;&lt;/code>.&lt;/p>
&lt;h3 id="navigating-the-cli">Navigating the CLI&lt;/h3>
&lt;p>At any level of CLI, &lt;code>?&lt;/code> displays the sub-packages and available commands. Type .. to exit a sub-package and return to its parent. &lt;code>exit&lt;/code> brings you back to &lt;code>bfshell&amp;gt;&lt;/code> root level.&lt;/p>
&lt;h2 id="interacting-with-p4-tables-using-bfshell">Interacting with P4 Tables using bfshell&lt;/h2>
&lt;h3 id="getting-bfrt-object">Getting &lt;code>bfrt&lt;/code> object&lt;/h3>
&lt;p>At &lt;code>bfshell&amp;gt;&lt;/code>, if it&amp;rsquo;s the fist time to execute &lt;code>bfrt_python&lt;/code> , you will get a &lt;code>bfrt_python&amp;gt;&lt;/code> prompt, then you have to execute &lt;code>bfrt&lt;/code> to get &lt;code>bfrt&amp;gt;&lt;/code> prompt. Afterwards, executing &lt;code>bfrt_python&lt;/code> at &lt;code>bfshell&amp;gt;&lt;/code> will directly return &lt;code>bfrt&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfshell&amp;gt; bfrt_python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cwd : &amp;lt;your_pwd&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">We&lt;span class="err">&amp;#39;&lt;/span>ve found &lt;span class="m">1&lt;/span> p4 programs &lt;span class="k">for&lt;/span> device 0:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;your program&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Creating tree &lt;span class="k">for&lt;/span> dev &lt;span class="m">0&lt;/span> and program simple_l3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Available symbols:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dump - Command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">info - Command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mirror - Node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">port - Node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pre - Node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;your program&amp;gt; - Node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tf1 - Node
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="user-defined-tables">User-defined Tables&lt;/h3>
&lt;p>Tables defined in your P4 pipeline is under the hierarchy of &lt;code>bfrt.&amp;lt;your program&amp;gt;.pipe&lt;/code>. You may get &lt;code>Egress&lt;/code>, &lt;code>EgressParser&lt;/code>, &lt;code>Ingress&lt;/code>, &lt;code>IngressParser&lt;/code>, &lt;code>snapshot&lt;/code> depending on your program. For example, we defined two tables in Ingress pipeline in &lt;code>simple_l3&lt;/code>, shown as below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfrt.simple_l3.pipe.Ingress&amp;gt; info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------------------&amp;gt; info&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Tables under this node:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Full Table Name Type Usage Capacity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------------- ------------ ------- ----------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pipe.Ingress.ipv4_lpm MATCH_DIRECT &lt;span class="m">0&lt;/span> &lt;span class="m">12288&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pipe.Ingress.ipv4_host MATCH_DIRECT &lt;span class="m">0&lt;/span> &lt;span class="m">65536&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After entering a table, you&amp;rsquo;ll have the key fields, actions, and a bunch of available commands. Type &lt;code>?&lt;/code> after available actions for help.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfrt.simple_l3.pipe.Ingress.ipv4_host&amp;gt; ?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BF Runtime CLI Object &lt;span class="k">for&lt;/span> pipe.Ingress.ipv4_host table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Key fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hdr.ipv4.dst_addr &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>EXACT &lt;span class="nv">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Actions, Data fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NoAction &lt;span class="o">(&lt;/span>DefaultOnly&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> data fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Ingress.drop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> data fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Ingress.send
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">1&lt;/span> data fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>BYTE_STREAM &lt;span class="nv">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Available Commands:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add_from_json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add_with_drop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add_with_send
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clear
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">delete
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dump
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">entry_with_drop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">entry_with_send
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">get_default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">get_handle
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">get_key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mod_with_drop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mod_with_send
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">reset_default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_default_with_NoAction
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_default_with_drop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_default_with_send
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">symmetric_mode_get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">symmetric_mode_set
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you may notice, there are &lt;code>entry_*&lt;/code> and &lt;code>add_*&lt;/code>. &lt;code>entry_with_&amp;lt;action&amp;gt;&lt;/code> just creates a pending entry to be pushed into current table later. &lt;code>add_with_&amp;lt;action&amp;gt;&lt;/code> directly adds an entry to current table.&lt;/p>
&lt;p>For the helping information of the Available Commands, type &lt;code>?&lt;/code> after the command and execute.&lt;/p>
&lt;h4 id="dumping-tables">Dumping Tables&lt;/h4>
&lt;p>To check entries of a specific table, just go to the corresponding level and execute &lt;code>dump&lt;/code>.&lt;/p>
&lt;h4 id="adding-entry">Adding Entry&lt;/h4>
&lt;p>Adding an entry can be easily done by calling&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">add_with_&amp;lt;action&amp;gt;&lt;span class="o">(&lt;/span>&amp;lt;match_key_1&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;match_data_1&amp;gt;,...,MATCH_PRIORITY&lt;span class="o">=&lt;/span>&amp;lt;prior_value&amp;gt;,&amp;lt;action_key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;action_data&amp;gt;&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>&amp;lt;action&amp;gt;&lt;/code> refers to the available actions of this table, &lt;code>&amp;lt;match_key&amp;gt;&lt;/code>, &lt;code>&amp;lt;match_data&amp;gt;&lt;/code>, &lt;code>&amp;lt;action_key&amp;gt;&lt;/code>, and &lt;code>&amp;lt;action_data&amp;gt;&lt;/code> depend on your program. For example, add an entry to &lt;code>ipv4_host&lt;/code> as below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfrt.simple_l3.pipe.Ingress.ipv4_host&amp;gt; add_with_send&lt;span class="o">(&lt;/span>&lt;span class="nv">dst_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;10.0.0.1&amp;#39;&lt;/span>,port&lt;span class="o">=&lt;/span>1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bfrt.simple_l3.pipe.Ingress.ipv4_host&amp;gt; dump
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------------------------&amp;gt; dump&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----- ipv4_host Dump Start -----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Default Entry:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry data &lt;span class="o">(&lt;/span>action : NoAction&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry 0:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry key:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hdr.ipv4.dst_addr : 0x0A000001
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry data &lt;span class="o">(&lt;/span>action : Ingress.send&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port : 0x01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----- ipv4_host Dump End -----
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For inputting the address, &lt;code>bfrt&lt;/code> supports both simple string-like address &lt;code>x.x.x.x&lt;/code> and &lt;code>ip_address('x.x.x.x')&lt;/code> object in Python.&lt;/p>
&lt;p>Standard $\rm {P4_{16}}$ supports three types of &lt;code>match_kind&lt;/code>, the key-value pairs of which are different.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>EXACT&lt;/code>: &lt;code>&amp;lt;match_key&amp;gt;=&amp;lt;match_value&amp;gt;,...&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>LPM&lt;/code>: &lt;code>&amp;lt;match_key&amp;gt;=&amp;lt;match_value&amp;gt;, &amp;lt;match_key&amp;gt;_p_length=&amp;lt;length&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>TERNARY&lt;/code>: &lt;code>&amp;lt;match_key&amp;gt;=&amp;lt;match_value&amp;gt;, &amp;lt;match_key&amp;gt;_mask=&amp;lt;mask&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Besides, Tofino Native Architecture supports two additional &lt;code>match_kind&lt;/code> types, i.e., &lt;code>range&lt;/code> and &lt;code>selector&lt;/code>. Please refer to Tofino Native Architecture Documentation for help.&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://github.com/barefootnetworks/Open-Tofino" target="_blank" rel="noreferrer">
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227c1.129.166 2.27.293 3.423.379c.35.026.67.21.865.501L12 21l2.755-4.132a1.14 1.14 0 0 1 .865-.502a48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741z"/>&lt;/svg>Open Tofino&lt;/span>&lt;/a>
&lt;/div>
&lt;h4 id="modifying-entry">Modifying Entry&lt;/h4>
&lt;p>Similar as adding entry, modifying the action of an existing entry can be done by calling&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mod_with_&amp;lt;action&amp;gt;&lt;span class="o">(&lt;/span>&amp;lt;match_key_1&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;match_data_1&amp;gt;,...,MATCH_PRIORITY&lt;span class="o">=&lt;/span>&amp;lt;prior_value&amp;gt;,&amp;lt;action_key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;action_data&amp;gt;&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="deleting-entry">Deleting Entry&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">delete&lt;span class="o">(&lt;/span>&amp;lt;match_key_1&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;match_data_1&amp;gt;,...,MATCH_PRIORITY&lt;span class="o">=&lt;/span>&amp;lt;prior_value&amp;gt;&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fixed-function-tables">Fixed Function Tables&lt;/h3>
&lt;p>You may notice there are other Node options &lt;code>mirror&lt;/code>, &lt;code>port&lt;/code>, &lt;code>pre&lt;/code>, &lt;code>tf1&lt;/code> other than &lt;code>&amp;lt;your program&amp;gt;&lt;/code> at &lt;code>bfrt&lt;/code>. They are &lt;em>Fixed Functions&lt;/em> provided by Tofino ASIC. Official explanation is as below.&lt;/p>
&lt;blockquote>
&lt;p>To complement the P4 programmable packet processing pipeline, the Tofino ASIC also has &amp;lsquo;Fixed Function&amp;rsquo; (FF) blocks. These blocks deal with packet memory buffer management, port configuration, multicast, scheduling, queues, etc. The P4 Studio SDE provides &amp;lsquo;BF Runtime&amp;rsquo; API (BF-RT) with data-driven general methods applicable to the different types of Tofino pipeline tables including Exact Match, ALPM, Counters, etc. The same BF-RT API is applicable for the Tofino &amp;lsquo;Fixed Function&amp;rsquo; blocks represented as tables.&lt;/p>
&lt;/blockquote>
&lt;p>For details, please refer to BF-Runtime Fixed API Doxygen documentation.&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="https://www.intel.com/content/www/us/en/secure/confidential/collections/connectivity-research-program/p4-suite/p4-studio.html?q=Fixed%20API%20Doxygen&amp;amp;s=Relevancy" target="_blank" rel="noreferrer">
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227c1.129.166 2.27.293 3.423.379c.35.026.67.21.865.501L12 21l2.755-4.132a1.14 1.14 0 0 1 .865-.502a48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741z"/>&lt;/svg>BF-Runtime Fixed API Doxygen Document&lt;/span>&lt;/a>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>mirror&lt;/code> contains a mirror configuration table called &lt;code>mirror.cfg&lt;/code>&lt;/li>
&lt;li>&lt;code>port&lt;/code> contains port configuration tables &lt;code>port&lt;/code>, port statistic tables &lt;code>port_stat&lt;/code>, etc. for general ports&lt;/li>
&lt;li>&lt;code>pre&lt;/code> contains tables for multicast, copy_to_cpu port&lt;/li>
&lt;li>&lt;code>tf1&lt;/code> contains tables for packet buffer, queue, scheduling, etc.&lt;/li>
&lt;/ul>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">Some debugs or diagnostics can be done by dumping entries of these tables. Or you can even configure memory buffer, port, multicast, etc. by modifying the entries. But using BF Runtime API for configuring the Fixed Functions is more suggested, which offers more intuitive operations.&lt;/span>
&lt;/div>
&lt;h2 id="interacting-with-p4-tables-using-python-scripts">Interacting with P4 Tables using Python scripts&lt;/h2>
&lt;h3 id="how-to-run-your-scripts">How to run your scripts&lt;/h3>
&lt;p>Interactive &lt;code>bfshell&lt;/code> is very handy for quick debugging or testing. However, if you want to install a batch of rules or configure several ports automatically, interactive &lt;code>bfshell&lt;/code> may not be your best choice. Tofino provides a way to interact with switch using Python scripts when running &lt;code>bfshell&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$SDE&lt;/span>/run_bfshell.sh &lt;span class="o">[&lt;/span>OPTIONS&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Options &lt;span class="k">for&lt;/span> running bfshell:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -f &amp;lt;command_file&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bfshell &lt;span class="nb">command&lt;/span> input file.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -b &amp;lt;python_script&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bfrt_python script to run.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -i
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> -b provided, start interactive mode after completion.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -a &amp;lt;ipv4_addr&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Connect to this ipv4 address.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -p &amp;lt;port&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> open connection on this port.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -d &amp;lt;devices&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Wait &lt;span class="k">for&lt;/span> these devices to be ready &lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> or 0-2 or 0,4,6-8&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --no-status-srv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Do not query bf_switchd&lt;span class="s1">&amp;#39;s status server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> --status-port &amp;lt;port number&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> Specify bf_switchd&amp;#39;&lt;/span>s status server port number&lt;span class="p">;&lt;/span> the default is &lt;span class="m">7777&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Display this help.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An alternative way is to execute the script from &lt;code>bfshell&lt;/code> prompt.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bfrt_python &amp;lt;your_script&amp;gt; &amp;lt;true/false&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The later boolean choice &lt;code>&amp;lt;true/false&amp;gt;&lt;/code> is to specify whether to load interactive mode after executing provided script, same as &lt;code>-i&lt;/code> option in &lt;code>run_bfshell.sh&lt;/code>. One best thing to stay in interactive mode is that from &lt;code>bfrt&lt;/code>, you can still access and call functions defined in your script after its execution. In this case, you could just define some helper functions in your script and load it in interactive mode, then call them manually for experiment.&lt;/p>
&lt;h3 id="how-to-write-your-scripts">How to write your scripts&lt;/h3>
&lt;p>The hierarchy and usage of the objects in Python scripts is as same as &lt;code>bfrt&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">p4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bfrt&lt;/span>&lt;span class="o">.&amp;lt;&lt;/span>&lt;span class="n">your_program&lt;/span>&lt;span class="o">&amp;gt;.&lt;/span>&lt;span class="n">pipe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bfrt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bfrt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ipv4_lpm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p4&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Ingress&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ipv4_lpm&lt;/span> &lt;span class="c1"># a table defined in the P4 program&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Adding/modifying/deleting entries are as same as what you did in interactive shell. For example, adding an entry to the table &lt;code>ipv4_lpm&lt;/code> in Ingress pipeline is like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ipv4_lpm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_with_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dst_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;192.168.1.0&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dst_addr_p_length&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After executing all operations, the following statement is required at the end of your script.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">bfrt.complete_operations()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enjoy exploring!&lt;/p></description></item><item><title>Tofino model (Intel SDE)</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;p>This page shares some guidelines to run P4 code compiled for a Tofino target on any Linux machine. You need Intel P4 SDE installed.&lt;/p>
&lt;h2 id="intel-tofino-model">Intel Tofino Model&lt;/h2>
&lt;p>The Intel Tofino Model is a software behavioral emulation of the Tofino dataplane chipset. Its goal is specifically to let developers quickly test and debug their code without the need of physically accessing a Tofino ASIC.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The official ICA courses make extensive use of the model!&lt;/span>
&lt;/div>
&lt;p>We warmly recommend (especially new users) to start working with the model first, as it also provides a detailed logging of packet events along the pipeline. This way it is much easier to verify code correctness.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900">
&lt;span class="pr-3 pt-1 text-red-400">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The model is not designed for performance, but for modeling with high fidelity the Tofino chipset. Its peak sustained throughput in quite low (few dozens of packets/sec). It must be used for initial code validation only.&lt;/span>
&lt;/div>
&lt;h3 id="start-the-model">Start the model&lt;/h3>
&lt;p>In order to exchange traffic between the Tofino model instance running in your local OS and other programs, you must first create a set of &lt;code>veth&lt;/code> interfaces and tell the model to connect them to its emulated ports.&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="flex justify-center ">
&lt;div class="w-100" >&lt;img alt="tofino model port mapping" srcset="
/media/tofino-model_hu4230dbc1addc2af0d988416709348b71_156398_2b09908af1289fe30d77c5257888cb31.webp 400w,
/media/tofino-model_hu4230dbc1addc2af0d988416709348b71_156398_fcbb8439dc8ba3d12b8dc8f6e1bb2088.webp 760w,
/media/tofino-model_hu4230dbc1addc2af0d988416709348b71_156398_1200x1200_fit_q85_h2_lanczos.webp 1200w"
src="https://sup4rnet.github.io/media/tofino-model_hu4230dbc1addc2af0d988416709348b71_156398_2b09908af1289fe30d77c5257888cb31.webp"
width="760"
height="243"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>Execute &lt;code>iftofinoup&lt;/code> to create a default set of &lt;code>veth&lt;/code> pairs on the host machine.
To check it, use &lt;code>ìp a&lt;/code> or &lt;code>ifconfig&lt;/code> and see if there are new interfaces &lt;code>veth1&lt;/code>, &lt;code>veth2&lt;/code>, &amp;hellip;, &lt;code>veth251&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&amp;gt; ip a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6: veth1@veth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">10240&lt;/span> qdisc noqueue state UP group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether c6:e9:22:fb:4f:a1 brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7: veth0@veth1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">10240&lt;/span> qdisc noqueue state UP group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 1a:c1:2d:55:c2:6a brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8: veth3@veth2: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">10240&lt;/span> qdisc noqueue state UP group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether e6:b8:d2:d1:fd:0d brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9: veth2@veth3: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">10240&lt;/span> qdisc noqueue state UP group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 86:4d:6b:5d:f9:64 brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">71: veth250@veth251: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">10240&lt;/span> qdisc noqueue state UP group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 2a:2a:44:5c:93:66 brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, start the model with the command &lt;code>tfm&lt;/code>, which is an alias for:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$SDE&lt;/span>/run_tofino_model.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you don&amp;rsquo;t specify different port-to-veth mapping scheme, by default the model uses the port mapping scheme depicted in .&lt;/p>
&lt;p>To specify another mapping scheme, the option &lt;code>-f &amp;lt;port info file&amp;gt;.json&lt;/code> when running the model. See the help and the P4 examples coming with the SDE for more details.&lt;/p>
&lt;h3 id="push-programs-to-the-model">Push programs to the model&lt;/h3>
&lt;p>Once the model has started, you can proceed with the standard way to push P4 programs to your target. This time though, your target will not be a Tofino ASIC, but the Intel Tofino model.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">p4 -p program
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="about-choosing-between-the-asic-and-the-model-modes">About choosing between the ASIC and the MODEL modes&lt;/h3>
&lt;blockquote>
&lt;p>how does &lt;code>run_switchd&lt;/code> chooses between the ASIC and the MODEL mode?&lt;/p>
&lt;/blockquote>
&lt;p>To put it simply, the &lt;code>run_switchd&lt;/code> automatically selects between the &lt;code>MODEL&lt;/code> and the &lt;code>ASIC&lt;/code> mode, as follows:&lt;/p>
&lt;ul>
&lt;li>If a valid Board Support Package (BSP) is present and can be successfully loaded, &lt;code>ASIC&lt;/code> mode is selected&lt;/li>
&lt;li>Otherwise, the &lt;code>MODEL&lt;/code> mode is selected&lt;/li>
&lt;/ul>
&lt;p>The BSP is a software bundle containing hardware-specific device drivers. When compiling and installing the Intel SDE on &lt;code>rest-bfsw01&lt;/code> and &lt;code>rest-bfsw02&lt;/code> OSes, we provided a BSP tarball for the Edgecore WedgeBF100-32X Tofino switch. The SDE compiling stage produced the &lt;code>/opt/p4-sde/bf-sde-9.13.2/lib/libpltfm_mgr.so&lt;/code> system library.&lt;/p>
&lt;p>As an example, when we try to run a P4 program from one of the switches CPUs, we get the following output log.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&amp;gt; p4 -p program
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.434547 BF_SWITCHD DEBUG - Agent&lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>: /opt/p4-sde/bf-sde-9.13.2/install/lib/libpltfm_mgr.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.458615 BF_SWITCHD DEBUG - bf_switchd: library /opt/p4-sde/bf-sde-9.13.2/install/lib/libpltfm_mgr.so loaded
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:13.460011 BF_SWITCHD DEBUG - bf_switchd: agent&lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span> initialized
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Health monitor started
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:17.633309 BF_SWITCHD DEBUG - Device 0: Operational mode &lt;span class="nb">set&lt;/span> to ASIC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:17.633411 BF_SWITCHD DEBUG - Initialized the device types using platforms infra API
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:17.633461 BF_SWITCHD DEBUG - ASIC detected at PCI /sys/class/bf/bf0/device
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2024-07-28 11:51:17.633599 BF_SWITCHD DEBUG - ASIC pci device id is &lt;span class="m">16&lt;/span> &lt;span class="o">(&lt;/span>0x0010&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here, &lt;code>bf_switchd&lt;/code> has found and loaded the platform management libraries of the BSP and started in in &lt;code>ASIC&lt;/code> mode automatically. Conversely, the same command run on a server&amp;rsquo;s OS would set the mode to &lt;code>MODEL&lt;/code>.&lt;/p></description></item><item><title>Copy to CPU</title><link/><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid/><description>&lt;h2 id="todo-comment-about-cpu-ethernet-ports">TODO: comment about CPU ethernet ports.&lt;/h2>
&lt;p>Describe what are the ethernet port and their speed.&lt;/p>
&lt;p>Add a simple tutoarial example that shows how to send traffic to the switch and receive the mirrored packet. e.g., add code snippet that shows a scapy send and a &lt;code>tcpdump&lt;/code> receive that sniffs the packets. Remind the user to populate P4 table rules. Link the full code either from github or as a file&lt;/p>
&lt;h3 id="using-the-pcie-cpu-port">Using the PCIe CPU port&lt;/h3>
&lt;h3 id="todo-formatrewrite-whats-next">TODO format/rewrite what&amp;rsquo;s next&lt;/h3>
&lt;p>Load the drivers !!! (one of bf_kdrv or bf_kpkt):
sudo $SDE_INSTALL/bin/bf_kdrv_mod_load $SDE_INSTALL&lt;/p>
&lt;p>Difference between bf_kdrv and bf_kpkt&lt;/p>
&lt;p>The difference is that if you use bf_kdrv driver, it allows you to access PCIe CPU port (send/receive packets using packet DMA) at the user-process level, using the specialized bf_pkt APIs, whereas if you use bf_kpkt driver, then the CPU PCIe port is exposed as a regular Linux network interface and you can send/receive packets using any standard Linux methods: you can simply open a raw socket, you can use libpcap, you can use Scapy, Wireshark, etc., etc.)
We discuss this in detail in Intel Connectivity Academy course ICA-XFG-101 (formerly that was a part of ICA-1141).&lt;/p>
&lt;p>I would say that regardless of the loaded module, when the packet is sent to CPU PCIe port (320 on a 4-pipe Tofino, 192 on a 2-pipe Tofino or port 0 on Tofino2), the packet is automatically sent to the DMA engine. As a result, its contents is placed into the RAM, where the host CPU can access it.
The question is: how exactly this RAM will be accessed?
In case of bf_kdrv, a process running on the host CPU will see the DMA rings because the driver will map them into the process&amp;rsquo; address space. The user process can then use bf_pkt APIs to poll those rings, receive notifications when new packets arrive and ultimately retrieve those packets
In case of bf_kpkt, the rings are mapped into the kernel address space and received packets are processed by the standard Linux network interface driver which then makes them accessible via the standard socket interface.&lt;/p></description></item><item><title>Access management</title><link>https://sup4rnet.github.io/quickstart/getstarted/login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/quickstart/getstarted/login/</guid><description>&lt;p>This page describes the sharing policy for the resources in the cluster.&lt;/p>
&lt;p>Machines in the cluster are classified into &lt;em>compute nodes&lt;/em> and &lt;em>network nodes&lt;/em>, as described in &lt;a href="https://sup4rnet.github.io/quickstart/overview">cluster overview&lt;/a>. The resource sharing policy is different for the two.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">The following design may be subject to changes in the future, as the cluster is upgraded with new compute/network nodes.&lt;/span>
&lt;/div>
&lt;p>&lt;img src="tenant-access.jpg" alt="minifyme">&lt;/p>
&lt;h3 id="compute-nodes">Compute nodes&lt;/h3>
&lt;p>Each tenant has one or more virtual machine (VM) on the compute nodes, and can login into them independently. &lt;code>ssh&lt;/code> login to the VMs is always enabled. Virtual machines images comes pre-configured with Intel P4 Software Development Environment (SDE).&lt;/p>
&lt;p>The virtual NICs (vNICs) of these VMs are bridged to the 100 Gbps dataplane network, therefore the VMs can communicate with the P4 switches directly. VMs should be privileged to run the experiments, though for performance critical experiments direct access to (some of) the nodes is also possible.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">VMs are useful to let tenants to test simulataneously their P4 code for a Tofino target, &lt;a href="#testing-p4-code-without-access-to-tofino-asic">without having access to the physical Tofino ASIC&lt;/a>.&lt;/span>
&lt;/div>
&lt;h3 id="network-nodes">Network nodes&lt;/h3>
&lt;p>Intel Tofino programmable data-plane hardware lacks the essential support for multi-tenancy.
Currently, we do not implement any mechanism to overcome this limitation. See also &lt;a href="https://sup4rnet.github.io/blog/about-multitenancy/">About multi-tenancy in Tofino switches&lt;/a>. This means that no more than one tenant at a time will be granted access to the Tofino switches.&lt;/p>
&lt;p>The Edgecore Wedge100BF-32X switches available in the cluster feature on board:&lt;/p>
&lt;ul>
&lt;li>an Intel Tofino P4 programmable dataplane ASIC&lt;/li>
&lt;li>an x86 control plane CPU&lt;/li>
&lt;/ul>
&lt;p>It is from the control plane CPU that P4 programs are pushed to the Tofino ASIC.&lt;/p>
&lt;p>A tenant willing to deploy and test its P4 code on SUP4RNET Tofino switches, must first reserve its own slot through a dedicated dashboard.&lt;/p>
&lt;div class="hb-cards mt-4 grid gap-4 not-prose" style="--hb-cols: 1;">
&lt;a
class="hb-card group"href="http://restsrv01.polito.it:8080" target="_blank" rel="noreferrer">
&lt;span class="hb-card-title p-4">
&lt;svg style="height: 1em; width: 1em;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5a17.92 17.92 0 0 1-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418"/>&lt;/svg>Access the Tofino reservation dashboard&lt;/span>&lt;/a>
&lt;/div>
&lt;p>Once a slot has been reserved, a tenant will be granted exclusive access to the control plane CPU. The tenant can then login via &lt;code>ssh&lt;/code> using the account he/she obtained and perform operations on the switch.&lt;/p>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900">
&lt;span class="pr-3 pt-1 text-red-400">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">&lt;strong>Prerequisite&lt;/strong>: you setup PoliTO VPN to access the dashboard.&lt;/span>
&lt;/div>
&lt;p>Isolation between tenants on the switch is implemented via Linux user accounts.&lt;/p>
&lt;h4 id="testing-p4-code-without-access-to-tofino-asic">Testing P4 code without access to Tofino ASIC&lt;/h4>
&lt;p>While the reservation mechanism to access the Tofino ASIC might be tedious, there is a way to prototype your P4 code on a Tofino emulator before deploying to the actual hardware. The Intel P4 SDE comes with a register-level Tofino emulator, which reproduces most of the pipeline features via software. Only some Tofino features are not supported by the emulator.&lt;/p>
&lt;p>For all code that do not require these special features, we highly advise to first test your project on the emulator and move to the actual hardware when you are relatively confident about the correctness of your code.&lt;/p>
&lt;p>This is especially recommended for inexperienced users for at least two reasons:&lt;/p>
&lt;ol>
&lt;li>A detailed log is available in the emulator and not on the ASIC&lt;/li>
&lt;li>You don&amp;rsquo;t block any other tentant&lt;/li>
&lt;/ol>
&lt;h3 id="about-sudo-privileges">About sudo privileges&lt;/h3>
&lt;p>All tenants are granted elevated privileges in their VMs.
Instead, as a default policy, &lt;code>sudo&lt;/code> privileges are disabled for all tenants on the &lt;strong>switch OS&lt;/strong> and on the &lt;strong>server OS&lt;/strong>. Should any user demand elevated permissions, it must ask the cluster admins. Only if strictly necessary, &lt;code>sudo&lt;/code> privileges may be granted for specific commands and revoked when not needed anymore. In general, alternative solutions must be preferred.&lt;/p></description></item><item><title>Update this website</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;p>This guide is for developers and mantainers of the SUP4RNET website. You can find the full version of this developer guide on &lt;a href="https://github.com/sup4rnet/sup4rnet-website/blob/staging/deploy/README.md">GitHub&lt;/a>.&lt;/p>
&lt;h2 id="quick-start">Quick start&lt;/h2>
&lt;p>The website is written in markdown language (i.e., &lt;code>.md&lt;/code> files), then compiled to static &lt;code>html&lt;/code> pages using &lt;code>hugo&lt;/code>.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Check for existing SSH keys with &lt;code>ls -al ~/.ssh&lt;/code>. If you do not have one, please refer to &lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generating a new SSH key and adding it to the ssh-agent&lt;/a> to create a new key.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your SSH public key to github account. If you already have keys in your github account, jump to step 3. For detail, please see &lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account?platform=linux">Adding a new SSH key to your GitHub account&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Copy the SSH public key to your clipboard, which is usually saved at &lt;code>~/.ssh/id_ed25519.pub&lt;/code> or &lt;code>~/.ssh/rsa.pub&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the upper-right corner of any page on GitHub, click your &lt;strong>profile photo&lt;/strong>, then click &lt;strong>Settings&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the &amp;ldquo;Access&amp;rdquo; section of the sidebar, click &lt;strong>SSH and GPG keys&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &lt;strong>New SSH key or Add SSH key&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add a &lt;strong>Title&lt;/strong> for the new key as you like. Paste your public key to &lt;strong>Key&lt;/strong> field. Select the type of key, either authentication or signing. &lt;em>Authentication Key&lt;/em> is enough for this scenario.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Clone this repository on your machine with &lt;strong>SSH&lt;/strong>. This step is for a more convenient pushing to remote repo once you store your SSH public key in Github account.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone git@github.com:sup4rnet/sup4rnet-website.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you have already cloned with HTTPS before, using the following commands to switch the remote URL to ssh.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># check the remote URL of the local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin https://github.com/sup4rnet/sup4rnet-website.git &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin https://github.com/sup4rnet/sup4rnet-website.git &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># switch to ssh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote set-url origin git@github.com:sup4rnet/sup4rnet-website.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># verify&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin git@github.com:sup4rnet/sup4rnet-website.git &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin git@github.com:sup4rnet/sup4rnet-website.git &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install &lt;a href="https://docs.hugoblox.com/getting-started/install-hugo/">Hugo&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="edit-website-content">Edit website content&lt;/h3>
&lt;h4 id="bring-things-up">Bring things up&lt;/h4>
&lt;p>Go into the directory where you cloned the repository and start Hugo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd sup4ernet-website
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open your browser and go to &lt;code>localhost:1313&lt;/code>.&lt;/p>
&lt;p>&amp;#x1f389; Here we go. Hugo just compiled your website. As you will edit one of the markdown files, the website at &lt;code>localhost:1313&lt;/code> will instantly refresh so that you can see your changes quickly.&lt;/p>
&lt;p>&lt;em>Since&lt;/em> &lt;code>hugo serve&lt;/code> &lt;em>has loaded your website in memory, it will be incredibly to refresh your local changes!&lt;/em>&lt;/p>
&lt;h4 id="addmodify-pages">Add/modify pages&lt;/h4>
&lt;p>The markdown files are located in the &lt;code>content&lt;/code> folder, and organized in subfolders corresponding to sections of the website.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&amp;gt; tree -L &lt;span class="m">2&lt;/span> content
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">content
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── authors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── admin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── _index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── paolo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── about-multitenancy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── beta-testing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── _index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── unibo-callegati-joins
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── community
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── ac-2020.jpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── docs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── admin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── _index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── reference.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── supernet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── tofino-primer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── _index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── projects
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── _index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── nvidia
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── quickstart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── getstarted
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── _index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── overview
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;#x270f;&amp;#xfe0f; As an example, edit &lt;code>content/quickstart/_index.md&lt;/code> and change the page title. Then browse to &lt;code>localhost:1313/quickstart&lt;/code> and your changes are instantaneously there.&lt;/p>
&lt;p>You are ready you play with the website.&lt;/p>
&lt;h3 id="deployment">Deployment&lt;/h3>
&lt;p>Once you are satisfied with your local changes, the next step is to deploy them in production.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd deploy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./deploy.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>deploy.sh&lt;/code> script will attempt to update both the public GitHub pages website and the private website hosted in a local machine within the cluster: &lt;code>restsrv01.polito.it&lt;/code>.&lt;/p>
&lt;h2 id="website-configuration">Website configuration&lt;/h2>
&lt;p>We used &lt;a href="https://github.com/HugoBlox/theme-documentation">Hugo Blox docs template&lt;/a>. We provide here some useful information, read the doc on the Hugo Blox website for more.&lt;/p>
&lt;p>The Hugo &lt;strong>Documentation Template&lt;/strong> empowers with everything you need to build a beautiful documentation website, including a customizable block-based homepage and blog. It&amp;rsquo;s ultra-fast and easy, letting you focus on your content. It&amp;rsquo;s also no-code by default, so no JavaScript knowledge is required unlike other templates!&lt;/p>
&lt;h3 id="page-layout-and-metadata">Page layout and metadata&lt;/h3>
&lt;p>Every &lt;code>.md&lt;/code> file in the website has a frontmatter section of this kind:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: Your page title
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type: docs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toc: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here you can specify meta parameters related to the page layout, the page title to be shown in the nav bars, etc. See existing files as an example.&lt;/p>
&lt;h3 id="hugo-config-files">Hugo config files&lt;/h3>
&lt;p>You can customize pretty much everything in your website via &lt;code>.yaml&lt;/code> configuration files in &lt;code>config&lt;/code> folder.&lt;/p>
&lt;ul>
&lt;li>&lt;code>menu.yaml&lt;/code>: specifies which folders correspond to the menu entries on the website&lt;/li>
&lt;li>&lt;code>hugo.yaml&lt;/code> here you can specify some meta parameters for the website. A useful use of this is to cascade your page parameter settings to all pages in a folder. See &lt;code>config/_default/hugo.yaml&lt;/code> as an example.&lt;/li>
&lt;li>&lt;code>params.yaml&lt;/code>: here you can specify other things such as website logo, text to be displayed when you share your wesite on social channels (i.e., SEO settings).&lt;/li>
&lt;/ul>
&lt;h2 id="detailed-guide">Detailed guide&lt;/h2>
&lt;p>Lot of things are going on behind the scenes!&lt;/p>
&lt;p>See our &lt;a href="https://github.com/sup4rnet/sup4rnet-website/blob/staging/deploy/README.md">Mantainance Guide&lt;/a> for more details.&lt;/p></description></item><item><title>Useful resources</title><link/><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid/><description>&lt;h2 id="todo-table-with-topic---link-to-intel-document">TODO: table with topic -&amp;gt; link to intel document&lt;/h2></description></item><item><title>Cluster kick-off! New partners from UniBO joining SUP4ERNET</title><link>https://sup4rnet.github.io/blog/unibo-callegati-joins/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/blog/unibo-callegati-joins/</guid><description>&lt;p>Debut award for the research group of University of Bologna lead by Prof. Franco Callegati! Kudos &amp;#x1f973;&lt;/p></description></item><item><title>About multi-tenancy on Tofino hardware</title><link>https://sup4rnet.github.io/blog/about-multitenancy/</link><pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/blog/about-multitenancy/</guid><description>&lt;p>Given the multi-tenancy nature of the cluster, isolation mechanisms are essential to prevent tenants from interfering with each other and to ensure the ability to run concurrent experiments. Differently from general-purpose compute infrastructure, existing programmable data-plane technologies lack the essential support for multi-tenancy. This is also the case for the Intel Tofino products line.&lt;/p>
&lt;p>These switches are equipped with multiple packet processing pipelines that can be programmed individually, thus in principle enabling some form of parallel program execution. However, they do not implement any mechanism for fault, resource and performance isolation across programs of different tenants, which can interfere with each other, either by accident or maliciously. As a result, every time a P4 program is installed, all pipelines undergo a complete reconfiguration, potentially causing disruption to the operations of other tenants&amp;rsquo; programs.&lt;/p>
&lt;blockquote>
&lt;p>Do we have a way to enable concurrent program execution while avoiding interference among tenants?&lt;/p>
&lt;/blockquote>
&lt;h3 id="virtualizing-hardware-resources-for-multi-tenancy">Virtualizing Hardware Resources for Multi-Tenancy&lt;/h3>
&lt;p>To enable concurrent program execution while avoiding interference among tenants, there are several approaches that can be considered:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Compile-Time Merging&lt;/strong>: This approach involves statically combining and compiling the P4 programs of different tenants into a single P4 binary. This merged binary is then installed on the target switch. On this line of work we find P4Visor&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. However, the compiling phase and pipeline re-configuration before runtime may require active tedious coordination cycles across tenants.&lt;/li>
&lt;/ol>
&lt;ol start="2">
&lt;li>&lt;strong>Hypervisor-Like P4 Programs&lt;/strong>: Solutions like HyPer4&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> instead use a hypervisor-like P4 program to dynamically emulate other P4 programs. This approach provides the illusion of multiple data plane programs but incurs significant overheads, limiting its applicability to software and FPGA targets.&lt;/li>
&lt;/ol>
&lt;ol start="3">
&lt;li>&lt;strong>Reconfigurable Match-Action (RMT) Hardware Extensions&lt;/strong>: More recent work, such as Menshen&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> propose extensions to the RMT hardware architecture for data-plane multi-tenancy. Menshen adds an indirection layer using small tables to dynamically load different per-tenant configurations for the same RMT resource. While these solutions allow running per-tenant packet processing logic, they are not specifically designed for Tofino hardware.&lt;/li>
&lt;/ol>
&lt;ol start="4">
&lt;li>&lt;strong>State-of-the-art transparent virtualization&lt;/strong>: SwitchVM&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup> introduces a runtime interpreter that allows the execution of Data Plane Filters (DPFs) in a P4 sandbox environment. SwitchVM does not require pipeline reconfiguration when installing new DPFs, as it involves installing match-action rules that redirect to a fixed set of executable instructions. Similarly to eBPF programs, DPFs are short programs which can be pre-installed on a PISA-like device and whose execution is triggered by arriving packets. In other words, installing new DPFs consists in installing match-action rules that redirect to a fixed set of executable instructions (e.g., &lt;code>ADD&lt;/code>, &lt;code>MOV&lt;/code>, etc.) implemented as atomic P4 actions, thus not involving any pipeline reconfiguration. Thus, SwitchVM enables time-sharing of the pipeline hardware across multiple tenants. Moreover, it guarantees strict resource isolation between DPFs belonging to different tenants, thanks to virtual registers with load/store instructions to access per-tenant state.
It enables time-sharing of the pipeline hardware across multiple tenants and guarantees strict resource isolation between DPFs belonging to different tenants. It effectively achieves transparent virtualization from a hardware standpoint, however tenants must write code using a new instruction set, and not all P4 constructs are reflected into the DPF instruction set.
Ultimately, SwitchVM has been implemented on a Tofino target and thus it is an interesting approach to consider for SUPERNET.&lt;/li>
&lt;/ol>
&lt;p>These approaches provide ways to virtualize hardware resources and enable concurrent program execution while ensuring isolation among tenants in a multi-tenancy environment. However, not all of them have been tested on Tofino switches, or require some extra effort to the P4 developer.&lt;/p>
&lt;p>Initially, we opted for a static resource reservation system which grants exclusive access to the switch to one user at a time, providing isolation but not concurrency on the hardware.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>P. Zheng, T. Benson, and C. Hu, “P4visor: lightweight virtualization and composition primitives for building and testing modular programs,” in &lt;em>Proceedings of the 14th International Conference on Emerging Networking EXperiments and Technologies&lt;/em>, Association for Computing Machinery, 2018.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>D. Hancock and J. van der Merwe, “HyPer4: Using P4 to virtualize the programmable dataplane,” in &lt;em>Proceedings of the 12th International on Conference on Emerging Networking EXperiments and Technologies&lt;/em>, Association for Computing Machinery, 2016&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>T. Wang, X. Yang, G. Antichi, A. Sivaraman, and A. Panda, “Isolation mechanisms for High-Speed Packet-Processing pipelines,” in &lt;em>19th USENIX Symposium on Networked Systems Designand Implementation (NSDI 22)&lt;/em>. USENIX Association, 2022.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4">
&lt;p>S. Khashab, A. Rashelbach, and M. Silberstein, “Multitenant In-Network acceleration with SwitchVM,” in &lt;em>21st USENIX Symposium on Networked Systems Design and Implementation
(NSDI 24)&lt;/em>. USENIX Association, 2024.&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Pre-release testing phase has started.</title><link>https://sup4rnet.github.io/blog/beta-testing/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/blog/beta-testing/</guid><description>&lt;p>Well done Zhihao! Zhihao Wang has been the first beta tester for our cluster, thanks to him we could spot and patch few issues and reaching the point of a more stable state.&lt;/p>
&lt;p>Zhihao is a PhD student at Politecnico di Torino and he has just started a new project that aims at using P4 switches in a very intriguing cybersecurity project. We asked him to report any issue occurring while using the nodes, and he has done a great job in assisting us with the testing and documentation. Kudos to him!&lt;/p>
&lt;p>
&lt;figure id="figure-initial-deployment-phase-of-tofino-switches-in-the-sup4rnet-cluster-in-one-of-the-politecnico-di-torinos-campus-data-centers">
&lt;div class="flex justify-center ">
&lt;div class="w-100" >&lt;img alt="screen reader text" srcset="
/media/supernet_hu214af4df9337d08f49c802ddf21d0dfa_12217933_d0fa0b1b510b72458c4bbe61b33931e4.webp 400w,
/media/supernet_hu214af4df9337d08f49c802ddf21d0dfa_12217933_452385c6bba190ddec80e9fd0028f075.webp 760w,
/media/supernet_hu214af4df9337d08f49c802ddf21d0dfa_12217933_1200x1200_fit_q85_h2_lanczos.webp 1200w"
src="https://sup4rnet.github.io/media/supernet_hu214af4df9337d08f49c802ddf21d0dfa_12217933_d0fa0b1b510b72458c4bbe61b33931e4.webp"
width="570"
height="760"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Initial deployment phase of Tofino switches in the SUP4RNET cluster in one of the Politecnico di Torino&amp;rsquo;s campus data centers.
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>Few months before, we decided to boost up the noise level of our Poltecnico di Torino data center by installing the two guys here, and believe me they are way more noisy than expected! That was fun!&lt;/p></description></item><item><title>Nvidia</title><link>https://sup4rnet.github.io/projects/nvidia/</link><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/projects/nvidia/</guid><description/></item><item><title>About</title><link>https://sup4rnet.github.io/community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sup4rnet.github.io/community/</guid><description>&lt;h2 id="help-contacts">Help contacts&lt;/h2>
&lt;p>
&lt;div class="person">
&lt;div class="person-image">
&lt;img src="ac-2020.jpg" alt="">
&lt;/div>
&lt;div class="person-info">
&lt;h3>Alessandro Cornacchia&lt;/h3>
&lt;p>Postdoc Researcher, KAUST&lt;/p>
&lt;p class="cluster-role">system mantainer&lt;/p>
&lt;div class="social-links">
&lt;a href="mailto:alessandro.cornacchia@polito.it" target="_blank">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M16.5 12a4.5 4.5 0 1 1-9 0a4.5 4.5 0 0 1 9 0Zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25"/>&lt;/svg>
&lt;/span> E-mail me
&lt;/a>
&lt;a href="https://www.linkedin.com/feed/https://www.linkedin.com/in/alessandro-cornacchia-53b3611ab/" target="_blank">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512">&lt;path fill="currentColor" d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"/>&lt;/svg>
&lt;/span>
&lt;/a>
&lt;a href="https://scholar.google.com/citations?user=xxEo3k4AAAAJ&amp;amp;hl=en&amp;amp;oi=ao" target="_blank">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">&lt;path fill="currentColor" d="M343.759 106.662V79.43L363.524 64h-213.89L20.476 176.274h85.656a82.339 82.339 0 0 0-.219 6.225c0 20.845 7.22 38.087 21.672 51.861 14.453 13.797 32.252 20.648 53.327 20.648 4.923 0 9.75-.368 14.438-1.024-2.907 6.5-4.374 12.523-4.374 18.142 0 9.875 4.499 20.43 13.467 31.642-39.234 2.67-68.061 9.732-86.437 21.163-10.531 6.5-19 14.704-25.39 24.531-6.391 9.9-9.578 20.515-9.578 31.962 0 9.648 2.062 18.336 6.219 26.062 4.156 7.726 9.578 14.07 16.312 18.984 6.718 4.968 14.469 9.101 23.219 12.469 8.734 3.344 17.406 5.718 26.061 7.062A167.052 167.052 0 0 0 180.555 448c13.469 0 26.953-1.734 40.547-5.187 13.562-3.485 26.28-8.642 38.171-15.493 11.86-6.805 21.515-16.086 28.922-27.718 7.39-11.68 11.094-24.805 11.094-39.336 0-11.016-2.25-21.039-6.75-30.14-4.468-9.073-9.938-16.542-16.452-22.345-6.501-5.813-13-11.155-19.516-15.968-6.5-4.845-12-9.75-16.468-14.813-4.485-5.046-6.735-10.054-6.735-14.984 0-4.921 1.734-9.672 5.216-14.265 3.455-4.61 7.674-9.048 12.61-13.306 4.937-4.25 9.875-8.968 14.796-14.133 4.922-5.147 9.141-11.827 12.61-20.008 3.485-8.18 5.203-17.445 5.203-27.757 0-13.453-2.547-24.46-7.547-33.314-.594-1.022-1.218-1.803-1.875-3.022l56.907-46.672v17.119c-7.393.93-6.624 5.345-6.624 10.635V245.96c0 5.958 4.875 10.834 10.834 10.834h3.989c5.958 0 10.833-4.875 10.833-10.834V117.293c0-5.277.778-9.688-6.561-10.63zm-107.36 222.48c1.14.75 3.704 2.78 7.718 6.038 4.05 3.243 6.797 5.695 8.266 7.414a443.553 443.553 0 0 1 6.376 7.547c2.813 3.375 4.718 6.304 5.718 8.734 1 2.477 2.016 5.461 3.047 8.946a38.27 38.27 0 0 1 1.485 10.562c0 17.048-6.564 29.68-19.656 37.859-13.125 8.18-28.767 12.274-46.938 12.274-9.187 0-18.203-1.093-27.063-3.196-8.843-2.116-17.311-5.336-25.39-9.601-8.078-4.258-14.577-10.204-19.5-17.797-4.938-7.64-7.407-16.415-7.407-26.25 0-10.32 2.797-19.29 8.422-26.906 5.594-7.625 12.938-13.391 22.032-17.315 9.063-3.946 18.25-6.742 27.562-8.398a157.865 157.865 0 0 1 28.438-2.555c4.47 0 7.936.25 10.405.696.455.219 3.032 2.07 7.735 5.563 4.704 3.462 7.625 5.595 8.75 6.384zm-3.359-100.579c-7.406 8.86-17.734 13.288-30.953 13.288-11.86 0-22.298-4.764-31.266-14.312-9-9.523-15.422-20.328-19.344-32.43-3.937-12.109-5.906-23.984-5.906-35.648 0-13.694 3.596-25.352 10.781-34.976 7.187-9.65 17.5-14.485 30.938-14.485 11.875 0 22.374 5.038 31.437 15.157 9.094 10.085 15.61 21.413 19.517 33.968 3.922 12.54 5.873 24.53 5.873 35.984 0 13.446-3.702 24.61-11.076 33.454z" style="stroke-width:.0647871"/>&lt;/svg>
&lt;/span>
&lt;/a>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.person {
display: flex;
align-items: center;
margin-bottom: 20px;
}
.cluster-role {
font-size: 0.9em;
font-style: italic;
color: #555;
}
.person-image {
flex-shrink: 0;
margin-right: 20px;
}
.person-image img {
width: 100px;
height: 100px;
border-radius: 50%;
object-fit: cover;
}
.person-info {
max-width: 300px;
}
.person-info h3 {
margin: 0;
font-size: 1.2em;
}
.person-info p {
margin: 5px 0;
color: #555;
}
.social-links a {
margin-right: 10px;
color: #0073b1;
text-decoration: none;
font-weight: bold;
}
.social-links a:hover {
text-decoration: underline;
}
&lt;/style>
&lt;div class="person">
&lt;div class="person-image">
&lt;img src="https://mypoli.polito.it/_library/image_pub.asp?matricola=003478" alt="">
&lt;/div>
&lt;div class="person-info">
&lt;h3>Paolo Giaccone&lt;/h3>
&lt;p>Full Professor, Politecnico di Torino&lt;/p>
&lt;p class="cluster-role">coordinator&lt;/p>
&lt;div class="social-links">
&lt;a href="mailto:paolo.giaccone@polito.it" target="_blank">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M16.5 12a4.5 4.5 0 1 1-9 0a4.5 4.5 0 0 1 9 0Zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25"/>&lt;/svg>
&lt;/span> E-mail me
&lt;/a>
&lt;a href="https://scholar.google.com/citations?user=NqZETvUAAAAJ&amp;amp;hl=en" target="_blank">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">&lt;path fill="currentColor" d="M343.759 106.662V79.43L363.524 64h-213.89L20.476 176.274h85.656a82.339 82.339 0 0 0-.219 6.225c0 20.845 7.22 38.087 21.672 51.861 14.453 13.797 32.252 20.648 53.327 20.648 4.923 0 9.75-.368 14.438-1.024-2.907 6.5-4.374 12.523-4.374 18.142 0 9.875 4.499 20.43 13.467 31.642-39.234 2.67-68.061 9.732-86.437 21.163-10.531 6.5-19 14.704-25.39 24.531-6.391 9.9-9.578 20.515-9.578 31.962 0 9.648 2.062 18.336 6.219 26.062 4.156 7.726 9.578 14.07 16.312 18.984 6.718 4.968 14.469 9.101 23.219 12.469 8.734 3.344 17.406 5.718 26.061 7.062A167.052 167.052 0 0 0 180.555 448c13.469 0 26.953-1.734 40.547-5.187 13.562-3.485 26.28-8.642 38.171-15.493 11.86-6.805 21.515-16.086 28.922-27.718 7.39-11.68 11.094-24.805 11.094-39.336 0-11.016-2.25-21.039-6.75-30.14-4.468-9.073-9.938-16.542-16.452-22.345-6.501-5.813-13-11.155-19.516-15.968-6.5-4.845-12-9.75-16.468-14.813-4.485-5.046-6.735-10.054-6.735-14.984 0-4.921 1.734-9.672 5.216-14.265 3.455-4.61 7.674-9.048 12.61-13.306 4.937-4.25 9.875-8.968 14.796-14.133 4.922-5.147 9.141-11.827 12.61-20.008 3.485-8.18 5.203-17.445 5.203-27.757 0-13.453-2.547-24.46-7.547-33.314-.594-1.022-1.218-1.803-1.875-3.022l56.907-46.672v17.119c-7.393.93-6.624 5.345-6.624 10.635V245.96c0 5.958 4.875 10.834 10.834 10.834h3.989c5.958 0 10.833-4.875 10.833-10.834V117.293c0-5.277.778-9.688-6.561-10.63zm-107.36 222.48c1.14.75 3.704 2.78 7.718 6.038 4.05 3.243 6.797 5.695 8.266 7.414a443.553 443.553 0 0 1 6.376 7.547c2.813 3.375 4.718 6.304 5.718 8.734 1 2.477 2.016 5.461 3.047 8.946a38.27 38.27 0 0 1 1.485 10.562c0 17.048-6.564 29.68-19.656 37.859-13.125 8.18-28.767 12.274-46.938 12.274-9.187 0-18.203-1.093-27.063-3.196-8.843-2.116-17.311-5.336-25.39-9.601-8.078-4.258-14.577-10.204-19.5-17.797-4.938-7.64-7.407-16.415-7.407-26.25 0-10.32 2.797-19.29 8.422-26.906 5.594-7.625 12.938-13.391 22.032-17.315 9.063-3.946 18.25-6.742 27.562-8.398a157.865 157.865 0 0 1 28.438-2.555c4.47 0 7.936.25 10.405.696.455.219 3.032 2.07 7.735 5.563 4.704 3.462 7.625 5.595 8.75 6.384zm-3.359-100.579c-7.406 8.86-17.734 13.288-30.953 13.288-11.86 0-22.298-4.764-31.266-14.312-9-9.523-15.422-20.328-19.344-32.43-3.937-12.109-5.906-23.984-5.906-35.648 0-13.694 3.596-25.352 10.781-34.976 7.187-9.65 17.5-14.485 30.938-14.485 11.875 0 22.374 5.038 31.437 15.157 9.094 10.085 15.61 21.413 19.517 33.968 3.922 12.54 5.873 24.53 5.873 35.984 0 13.446-3.702 24.61-11.076 33.454z" style="stroke-width:.0647871"/>&lt;/svg>
&lt;/span>
&lt;/a>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.person {
display: flex;
align-items: center;
margin-bottom: 20px;
}
.cluster-role {
font-size: 0.9em;
font-style: italic;
color: #555;
}
.person-image {
flex-shrink: 0;
margin-right: 20px;
}
.person-image img {
width: 100px;
height: 100px;
border-radius: 50%;
object-fit: cover;
}
.person-info {
max-width: 300px;
}
.person-info h3 {
margin: 0;
font-size: 1.2em;
}
.person-info p {
margin: 5px 0;
color: #555;
}
.social-links a {
margin-right: 10px;
color: #0073b1;
text-decoration: none;
font-weight: bold;
}
.social-links a:hover {
text-decoration: underline;
}
&lt;/style>
&lt;div class="person">
&lt;div class="person-image">
&lt;img src="zhihao.jpg" alt="">
&lt;/div>
&lt;div class="person-info">
&lt;h3>Zhihao Wang&lt;/h3>
&lt;p>Visiting PhD Student, Politecnico di Torino&lt;/p>
&lt;p class="cluster-role">system mantainer&lt;/p>
&lt;div class="social-links">
&lt;a href="mailto:zhihao.wang@polito.it" target="_blank">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M16.5 12a4.5 4.5 0 1 1-9 0a4.5 4.5 0 0 1 9 0Zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25"/>&lt;/svg>
&lt;/span> E-mail me
&lt;/a>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.person {
display: flex;
align-items: center;
margin-bottom: 20px;
}
.cluster-role {
font-size: 0.9em;
font-style: italic;
color: #555;
}
.person-image {
flex-shrink: 0;
margin-right: 20px;
}
.person-image img {
width: 100px;
height: 100px;
border-radius: 50%;
object-fit: cover;
}
.person-info {
max-width: 300px;
}
.person-info h3 {
margin: 0;
font-size: 1.2em;
}
.person-info p {
margin: 5px 0;
color: #555;
}
.social-links a {
margin-right: 10px;
color: #0073b1;
text-decoration: none;
font-weight: bold;
}
.social-links a:hover {
text-decoration: underline;
}
&lt;/style>
&lt;/p>
&lt;h2 id="how-to-contribute">How to contribute&lt;/h2>
&lt;p>Suggestions and additional content to the documentations are welcome.&lt;/p>
&lt;p>If you&amp;rsquo;d like to help in the cluster administration, please contact one of us.&lt;/p>
&lt;p>If you already have permissions to edit the website, please follow our &lt;a href="https://github.com/sup4rnet/supernet-website">Developers guide&lt;/a> on GitHub &lt;a href="https://github.com/sup4rnet/supernet-website">
&lt;span class="inline-block pr-1">
&lt;svg style="height: 1em; transform: translateY(0.1em);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">&lt;g fill="#181616">&lt;path fill-rule="evenodd" d="M64 5.103c-33.347 0-60.388 27.035-60.388 60.388c0 26.682 17.303 49.317 41.297 57.303c3.017.56 4.125-1.31 4.125-2.905c0-1.44-.056-6.197-.082-11.243c-16.8 3.653-20.345-7.125-20.345-7.125c-2.747-6.98-6.705-8.836-6.705-8.836c-5.48-3.748.413-3.67.413-3.67c6.063.425 9.257 6.223 9.257 6.223c5.386 9.23 14.127 6.562 17.573 5.02c.542-3.903 2.107-6.568 3.834-8.076c-13.413-1.525-27.514-6.704-27.514-29.843c0-6.593 2.36-11.98 6.223-16.21c-.628-1.52-2.695-7.662.584-15.98c0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033c11.526-7.813 16.59-6.19 16.59-6.19c3.287 8.317 1.22 14.46.593 15.98c3.872 4.23 6.215 9.617 6.215 16.21c0 23.194-14.127 28.3-27.574 29.796c2.167 1.874 4.097 5.55 4.097 11.183c0 8.08-.07 14.583-.07 16.572c0 1.607 1.088 3.49 4.148 2.897c23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z" clip-rule="evenodd"/>&lt;path d="M26.484 91.806c-.133.3-.605.39-1.035.185c-.44-.196-.685-.605-.543-.906c.13-.31.603-.395 1.04-.188c.44.197.69.61.537.91zm2.446 2.729c-.287.267-.85.143-1.232-.28c-.396-.42-.47-.983-.177-1.254c.298-.266.844-.14 1.24.28c.394.426.472.984.17 1.255zm2.382 3.477c-.37.258-.976.017-1.35-.52c-.37-.538-.37-1.183.01-1.44c.373-.258.97-.025 1.35.507c.368.545.368 1.19-.01 1.452zm3.261 3.361c-.33.365-1.036.267-1.552-.23c-.527-.487-.674-1.18-.343-1.544c.336-.366 1.045-.264 1.564.23c.527.486.686 1.18.333 1.543zm4.5 1.951c-.147.473-.825.688-1.51.486c-.683-.207-1.13-.76-.99-1.238c.14-.477.823-.7 1.512-.485c.683.206 1.13.756.988 1.237m4.943.361c.017.498-.563.91-1.28.92c-.723.017-1.308-.387-1.315-.877c0-.503.568-.91 1.29-.924c.717-.013 1.306.387 1.306.88zm4.598-.782c.086.485-.413.984-1.126 1.117c-.7.13-1.35-.172-1.44-.653c-.086-.498.422-.997 1.122-1.126c.714-.123 1.354.17 1.444.663zm0 0"/>&lt;/g>&lt;/svg>
&lt;/span>&lt;/a>.&lt;/p></description></item></channel></rss>